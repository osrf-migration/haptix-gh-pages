{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17609209.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17609209"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "Great to hear you're interested in more extensive control over simulation! What are some examples of functionality you'd like to see in the simulator?\n\nWe're currently working on a simulation API that allows users to add, remove, and move objects in simulation, get contact information, etc. We expect to have this functionality released in early May. [Here is the header file](#!/osrf/haptix_api/src/ac2f844cae4e76190a1a7e62ad2c355c265eb8fb/haptix_sim.h) laying out the new structures and functions in the C API, which will be wrapped in .mex files for the release. Can you take a look when you have the chance and see if that's adequate for your needs? If not, can you give us some feedback on what you'd like to see in the simulation API?", "markup": "markdown", "html": "<p>Great to hear you're interested in more extensive control over simulation! What are some examples of functionality you'd like to see in the simulator?</p>\n<p>We're currently working on a simulation API that allows users to add, remove, and move objects in simulation, get contact information, etc. We expect to have this functionality released in early May. <a data-is-external-link=\"true\" href=\"#!/osrf/haptix_api/src/ac2f844cae4e76190a1a7e62ad2c355c265eb8fb/haptix_sim.h\" rel=\"nofollow\">Here is the header file</a> laying out the new structures and functions in the C API, which will be wrapped in .mex files for the release. Can you take a look when you have the chance and see if that's adequate for your needs? If not, can you give us some feedback on what you'd like to see in the simulation API?</p>", "type": "rendered"}, "created_on": "2015-04-22T20:45:16.915097+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 17609209}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17611486.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17611486"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "Things the new header has that we like:\n\n* The ability to interact with non-MPL objects in the VRE  (i.e. any functions taking _model or _name as an argument)\n\n* Apply forces without object interaction (hxs_wrench, hxs_torque, hxs_force, etc)\n\n* Turn gravity on/off with the added ability to do this on an object-by-object basis\n\n\n\nAPI functions not in the header that we would like:\n\n* Ability to change object colors and transparency mid-simulation\n\n* A function that returns a boolean indicating whether two objects are overlapping and sharing the same volume. This would require \"phantom\" objects to be rendered in the VRE with no density or mass so an MPL finger could move right through it. This might be easier said than done...\n\n* If it is possible to make these phantom objects, add an on/off argument to hxs_add_model for this setting. We would like the option to create these phantom objects even if the overlap function cannot be implemented.", "markup": "markdown", "html": "<p>Things the new header has that we like:</p>\n<ul>\n<li>\n<p>The ability to interact with non-MPL objects in the VRE  (i.e. any functions taking _model or _name as an argument)</p>\n</li>\n<li>\n<p>Apply forces without object interaction (hxs_wrench, hxs_torque, hxs_force, etc)</p>\n</li>\n<li>\n<p>Turn gravity on/off with the added ability to do this on an object-by-object basis</p>\n</li>\n</ul>\n<p>API functions not in the header that we would like:</p>\n<ul>\n<li>\n<p>Ability to change object colors and transparency mid-simulation</p>\n</li>\n<li>\n<p>A function that returns a boolean indicating whether two objects are overlapping and sharing the same volume. This would require \"phantom\" objects to be rendered in the VRE with no density or mass so an MPL finger could move right through it. This might be easier said than done...</p>\n</li>\n<li>\n<p>If it is possible to make these phantom objects, add an on/off argument to hxs_add_model for this setting. We would like the option to create these phantom objects even if the overlap function cannot be implemented.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2015-04-22T23:06:01.839683+00:00", "user": {"display_name": "David Kluger", "uuid": "{0f991d57-5bb5-4dc7-bee0-56547fac3a17}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D"}, "html": {"href": "https://bitbucket.org/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D/"}, "avatar": {"href": "https://bitbucket.org/account/DKluger/avatar/"}}, "nickname": "DKluger", "type": "user", "account_id": null}, "updated_on": "2015-04-22T23:06:45.113885+00:00", "type": "issue_comment", "id": 17611486}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17611898.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17611898"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "Here's how I would design the functionality you are describing:\n\n```\n/// r, g, b, alpha must be between 0 and 1\n/// r, g, b represent the red, green, blue values of the object's color\n/// _alpha is the transparency. 1 is opaque, 0 is invisible\nhxs_set_model_color(const char *_model, float _r, float _g, float _b, float _alpha);\n\n/// similarly,\nhxs_set_link_color(const char *_model, const char *_link, float _r, float _g, float _b, float _alpha);\n\n/// Similar to set_gravity_mode, _collides is 1 if the object collides with other objects, 0 otherwise.\nhxs_set_model_collide_mode(int _collides);\n```\n\nThese functions would allow you to put objects into \"phantom\" mode using the following API calls, which you could put in a function of your own:\n\n```\n/// make the model transparent\nhxs_set_model_color(\"ghost_model\", 0, 0, 0, 0);\n\n/// disable collisions so that the model passes through all other models\nhxs_set_model_collide_mode(\"ghost_model\", 0);\n\n/// disable gravity so that the model doesn't sink due to gravity, otherwise it will fall through the ground\nhxs_set_model_gravity_mode(\"ghost_model\", 0);\n```\n\n@hsu and @caguero, what do you think of these extra API calls? I think they are feasible. For the first, we'd need to publish Visual messages with a new material to change the color. For the second one, I would use [Collision::SetCollision](https://bitbucket.org/osrf/gazebo/src/d54641c7e88c087ea1f0958ef113f433c57e0a42/gazebo/physics/Collision.hh?at=default#cl-69) to toggle collisions.", "markup": "markdown", "html": "<p>Here's how I would design the functionality you are describing:</p>\n<div class=\"codehilite\"><pre><span></span>/// r, g, b, alpha must be between 0 and 1\n/// r, g, b represent the red, green, blue values of the object&#39;s color\n/// _alpha is the transparency. 1 is opaque, 0 is invisible\nhxs_set_model_color(const char *_model, float _r, float _g, float _b, float _alpha);\n\n/// similarly,\nhxs_set_link_color(const char *_model, const char *_link, float _r, float _g, float _b, float _alpha);\n\n/// Similar to set_gravity_mode, _collides is 1 if the object collides with other objects, 0 otherwise.\nhxs_set_model_collide_mode(int _collides);\n</pre></div>\n\n\n<p>These functions would allow you to put objects into \"phantom\" mode using the following API calls, which you could put in a function of your own:</p>\n<div class=\"codehilite\"><pre><span></span>/// make the model transparent\nhxs_set_model_color(&quot;ghost_model&quot;, 0, 0, 0, 0);\n\n/// disable collisions so that the model passes through all other models\nhxs_set_model_collide_mode(&quot;ghost_model&quot;, 0);\n\n/// disable gravity so that the model doesn&#39;t sink due to gravity, otherwise it will fall through the ground\nhxs_set_model_gravity_mode(&quot;ghost_model&quot;, 0);\n</pre></div>\n\n\n<p>@hsu and @caguero, what do you think of these extra API calls? I think they are feasible. For the first, we'd need to publish Visual messages with a new material to change the color. For the second one, I would use <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/src/d54641c7e88c087ea1f0958ef113f433c57e0a42/gazebo/physics/Collision.hh?at=default#cl-69\" rel=\"nofollow\">Collision::SetCollision</a> to toggle collisions.</p>", "type": "rendered"}, "created_on": "2015-04-22T23:47:58.430848+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-04-22T23:49:27.990030+00:00", "type": "issue_comment", "id": 17611898}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17612169.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17612169"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "A question about the function that tells you if two objects are sharing the same volume:\n\n* You mean that if two objects are within the same \"bounding box\", even if they're not colliding the function should return true? If so, how do you define the bounding box? It's fixed, variable, always a box, ... ", "markup": "markdown", "html": "<p>A question about the function that tells you if two objects are sharing the same volume:</p>\n<ul>\n<li>You mean that if two objects are within the same \"bounding box\", even if they're not colliding the function should return true? If so, how do you define the bounding box? It's fixed, variable, always a box, ... </li>\n</ul>", "type": "rendered"}, "created_on": "2015-04-23T00:19:25.397419+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-04-23T00:19:51.569731+00:00", "type": "issue_comment", "id": 17612169}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17612565.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17612565"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "We can use the `collide_without_contact` tag in ODE to check contact with \"phantom\" objects.\n\n* http://answers.gazebosim.org/question/5736/detecting-collisions-without-very-small/", "markup": "markdown", "html": "<p>We can use the <code>collide_without_contact</code> tag in ODE to check contact with \"phantom\" objects.</p>\n<ul>\n<li><a href=\"http://answers.gazebosim.org/question/5736/detecting-collisions-without-very-small/\" rel=\"nofollow\" class=\"ap-connect-link\">http://answers.gazebosim.org/question/5736/detecting-collisions-without-very-small/</a></li>\n</ul>", "type": "rendered"}, "created_on": "2015-04-23T01:12:15.660065+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 17612565}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17628671.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17628671"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "Carlos, the \"bounding box\" option is a suitable solution. It would not be fixed, but could have variable dimensions and origin point to accommodate for sensing overlap with large and small objects.\n\nIdeally, the \"bounding box\" would be one in the same with the object's volume. So it could take any shape and would be molded to the meshes that make the objects. Again, not sure if any of this is feasible. I should mention that we can do our experiments with the VRE in its current state, but these additions would make visual feedback stronger for subjects in experimental sessions.", "markup": "markdown", "html": "<p>Carlos, the \"bounding box\" option is a suitable solution. It would not be fixed, but could have variable dimensions and origin point to accommodate for sensing overlap with large and small objects.</p>\n<p>Ideally, the \"bounding box\" would be one in the same with the object's volume. So it could take any shape and would be molded to the meshes that make the objects. Again, not sure if any of this is feasible. I should mention that we can do our experiments with the VRE in its current state, but these additions would make visual feedback stronger for subjects in experimental sessions.</p>", "type": "rendered"}, "created_on": "2015-04-23T14:57:42.841579+00:00", "user": {"display_name": "David Kluger", "uuid": "{0f991d57-5bb5-4dc7-bee0-56547fac3a17}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D"}, "html": {"href": "https://bitbucket.org/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D/"}, "avatar": {"href": "https://bitbucket.org/account/DKluger/avatar/"}}, "nickname": "DKluger", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 17628671}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17668386.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17668386"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-04-25T00:54:59.472974+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 17668386}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17804467.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17804467"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "On top of color, can other intrinsic parameters of the objects be changed mid simulation? Important ones for us would be compliance, frictional coefficients, and weight.", "markup": "markdown", "html": "<p>On top of color, can other intrinsic parameters of the objects be changed mid simulation? Important ones for us would be compliance, frictional coefficients, and weight.</p>", "type": "rendered"}, "created_on": "2015-04-30T20:24:58.909573+00:00", "user": {"display_name": "David Kluger", "uuid": "{0f991d57-5bb5-4dc7-bee0-56547fac3a17}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D"}, "html": {"href": "https://bitbucket.org/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D/"}, "avatar": {"href": "https://bitbucket.org/account/DKluger/avatar/"}}, "nickname": "DKluger", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 17804467}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17805955.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17805955"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "Can you describe the experiment where you would need to dynamically change the compliance, frictional coefficient, and mass of an object?\n\nYou set these the frictional coefficients and mass of an object before runtime by [making an SDF model](http://gazebosim.org/tutorials?tut=build_model&cat=build_robot). You can also spawn a model during simulation runtime using the HAPTIX API and specify its properties using SDF there. We plan on releasing more documentation for HAPTIX users in the upcoming release.\n\nGazebo supports dynamically changing surface friction coefficients and mass of an object via our C++/Linux API. We were not planning on exposing these parameters to HAPTIX users because it's rare and unrealistic that an object would suddenly change its frictional and inertial properties.\n\nIt is not yet possible to change the compliance of an object in Gazebo. All objects in Gazebo have uniform stiffness and are not deformable. Supporting deformable objects in Gazebo is a milestone we plan to have completed near the end of July.", "markup": "markdown", "html": "<p>Can you describe the experiment where you would need to dynamically change the compliance, frictional coefficient, and mass of an object?</p>\n<p>You set these the frictional coefficients and mass of an object before runtime by <a data-is-external-link=\"true\" href=\"http://gazebosim.org/tutorials?tut=build_model&amp;cat=build_robot\" rel=\"nofollow\">making an SDF model</a>. You can also spawn a model during simulation runtime using the HAPTIX API and specify its properties using SDF there. We plan on releasing more documentation for HAPTIX users in the upcoming release.</p>\n<p>Gazebo supports dynamically changing surface friction coefficients and mass of an object via our C++/Linux API. We were not planning on exposing these parameters to HAPTIX users because it's rare and unrealistic that an object would suddenly change its frictional and inertial properties.</p>\n<p>It is not yet possible to change the compliance of an object in Gazebo. All objects in Gazebo have uniform stiffness and are not deformable. Supporting deformable objects in Gazebo is a milestone we plan to have completed near the end of July.</p>", "type": "rendered"}, "created_on": "2015-04-30T21:50:27.053048+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 17805955}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17806829.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17806829"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "Mid simulation changes are mostly a convenience feature for us. For example, we want to see if a user can tell if an object in the environment is lightweight or heavy. We would assign a weight (say 0.5 kgs or 5 kgs) to an object in the environment, have a participant use the virtual limb to pick it up, and tell us if he/she thinks it is heavy or light. Since we as the experimenters know the weight we assigned, we can assign correct or incorrect to each trial. A statistically significant correct/incorrect rate would tell us if we can use our neural interface to allow a prosthesis user to tell the weight of an object. It would be nice if we did not have to reload the simulation for every trial to change the objects weight. If we could change the object's weight mid simulation, then we could run trials very quickly. Otherwise, we would have to reload the simulation for every trial.\n\nSimilar experiments could be done where we vary the coefficient of friction to emulate a sticky or slippery surface, or change the compliance to emulate a soft or hard object.", "markup": "markdown", "html": "<p>Mid simulation changes are mostly a convenience feature for us. For example, we want to see if a user can tell if an object in the environment is lightweight or heavy. We would assign a weight (say 0.5 kgs or 5 kgs) to an object in the environment, have a participant use the virtual limb to pick it up, and tell us if he/she thinks it is heavy or light. Since we as the experimenters know the weight we assigned, we can assign correct or incorrect to each trial. A statistically significant correct/incorrect rate would tell us if we can use our neural interface to allow a prosthesis user to tell the weight of an object. It would be nice if we did not have to reload the simulation for every trial to change the objects weight. If we could change the object's weight mid simulation, then we could run trials very quickly. Otherwise, we would have to reload the simulation for every trial.</p>\n<p>Similar experiments could be done where we vary the coefficient of friction to emulate a sticky or slippery surface, or change the compliance to emulate a soft or hard object.</p>", "type": "rendered"}, "created_on": "2015-04-30T23:04:44.222888+00:00", "user": {"display_name": "David Kluger", "uuid": "{0f991d57-5bb5-4dc7-bee0-56547fac3a17}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D"}, "html": {"href": "https://bitbucket.org/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D/"}, "avatar": {"href": "https://bitbucket.org/account/DKluger/avatar/"}}, "nickname": "DKluger", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 17806829}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17806844.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17806844"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "Couldn't you create multiple objects of different masses and move them in front of the user for each trial? We have an API function for moving an object to any position. You could also hide objects that are not in use by setting their transparency level.", "markup": "markdown", "html": "<p>Couldn't you create multiple objects of different masses and move them in front of the user for each trial? We have an API function for moving an object to any position. You could also hide objects that are not in use by setting their transparency level.</p>", "type": "rendered"}, "created_on": "2015-04-30T23:06:52.022452+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-04-30T23:07:39.081226+00:00", "type": "issue_comment", "id": 17806844}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17806913.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17806913"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": "That would work. The add/remove models could also be used in place of changing transparency.", "markup": "markdown", "html": "<p>That would work. The add/remove models could also be used in place of changing transparency.</p>", "type": "rendered"}, "created_on": "2015-04-30T23:18:27.611919+00:00", "user": {"display_name": "David Kluger", "uuid": "{0f991d57-5bb5-4dc7-bee0-56547fac3a17}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D"}, "html": {"href": "https://bitbucket.org/%7B0f991d57-5bb5-4dc7-bee0-56547fac3a17%7D/"}, "avatar": {"href": "https://bitbucket.org/account/DKluger/avatar/"}}, "nickname": "DKluger", "type": "user", "account_id": null}, "updated_on": null, "type": "issue_comment", "id": 17806913}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/17899661.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-17899661"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-05-06T00:20:38.217278+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 17899661}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/18090239.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-18090239"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-05-13T21:59:40.628141+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 18090239}, {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82/comments/18179634.json"}, "html": {"href": "#!/osrf/handsim/issues/82#comment-18179634"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/82.json"}}, "type": "issue", "id": 82, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Give HAPTIX users ability to write their own API functions"}, "content": {"raw": null, "markup": "markdown", "html": "", "type": "rendered"}, "created_on": "2015-05-18T17:52:38.329583+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 18179634}], "page": 1, "size": 15}