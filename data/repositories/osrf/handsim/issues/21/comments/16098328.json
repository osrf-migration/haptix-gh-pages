{"links": {"self": {"href": "data/repositories/osrf/handsim/issues/21/comments/16098328.json"}, "html": {"href": "#!/osrf/handsim/issues/21#comment-16098328"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/handsim/issues/21.json"}}, "type": "issue", "id": 21, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "title": "Joint and motor data are jumbled"}, "content": {"raw": "Brian is referencing lines 1014-1021 in HaptixControlPlugin:\n\n```\n  for (unsigned int i = 0; i < this->motorInfos.size(); ++i)\n  {\n    unsigned int m = motorInfos[i].index;\n    // TODO: return motor values, not joint values\n    this->robotState.set_motor_pos(i, this->joints[m]->GetAngle(0).Radian());\n    this->robotState.set_motor_vel(i, this->joints[m]->GetVelocity(0));\n    this->robotState.set_motor_torque(i, this->joints[m]->GetForce(0));\n  }\n```\n\n`motorInfos[i].index` gives the index of the joint that is powered by the motor. In `HaptixControlPlugin` there are actually no separate data structures holding information about motor positions, velocities, torques or limits. \"motors\" are simply joints with enforced positions. Right now the logic is as correct as the infrastructure of the plugin allows for.\n\n@hsu may be planning to change this in the future ([PR85](#!/osrf/handsim/pull-request/85)?) So in the meantime I'm assigning this to him.", "markup": "markdown", "html": "<p>Brian is referencing lines 1014-1021 in HaptixControlPlugin:</p>\n<div class=\"codehilite\"><pre><span></span>  for (unsigned int i = 0; i &lt; this-&gt;motorInfos.size(); ++i)\n  {\n    unsigned int m = motorInfos[i].index;\n    // TODO: return motor values, not joint values\n    this-&gt;robotState.set_motor_pos(i, this-&gt;joints[m]-&gt;GetAngle(0).Radian());\n    this-&gt;robotState.set_motor_vel(i, this-&gt;joints[m]-&gt;GetVelocity(0));\n    this-&gt;robotState.set_motor_torque(i, this-&gt;joints[m]-&gt;GetForce(0));\n  }\n</pre></div>\n\n\n<p><code>motorInfos[i].index</code> gives the index of the joint that is powered by the motor. In <code>HaptixControlPlugin</code> there are actually no separate data structures holding information about motor positions, velocities, torques or limits. \"motors\" are simply joints with enforced positions. Right now the logic is as correct as the infrastructure of the plugin allows for.</p>\n<p>@hsu may be planning to change this in the future (<a data-is-external-link=\"true\" href=\"#!/osrf/handsim/pull-request/85\" rel=\"nofollow\">PR85</a>?) So in the meantime I'm assigning this to him.</p>", "type": "rendered"}, "created_on": "2015-03-05T02:17:03.779935+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": null, "type": "issue_comment", "id": 16098328}