{"links": {"self": {"href": "data/repositories/osrf/handsim/pullrequests/106/comments/6547119.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/diff/osrf/handsim:41356272c2d3..917fdb5b7221?path=src%2FHaptixControlPlugin.cc"}, "html": {"href": "#!/osrf/handsim/pull-requests/106/_/diff#comment-6547119"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 106, "links": {"self": {"href": "data/repositories/osrf/handsim/pullrequests/106.json"}, "html": {"href": "#!/osrf/handsim/pull-requests/106"}}, "title": "Issue #73: Optitrack marker arithmetic based on monitor axes"}, "content": {"raw": "Why are we using a `unique_lock` with `std::try_to_lock` here? If we want to use this type of lock we should verify that we have acquired the mutex with `monitorLock.owns_lock()`.", "markup": "markdown", "html": "<p>Why are we using a <code>unique_lock</code> with <code>std::try_to_lock</code> here? If we want to use this type of lock we should verify that we have acquired the mutex with <code>monitorLock.owns_lock()</code>.</p>", "type": "rendered"}, "created_on": "2015-04-28T21:26:50.716487+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "inline": {"to": 1524, "from": null, "outdated": true, "path": "src/HaptixControlPlugin.cc"}, "updated_on": "2015-04-28T21:27:03.259627+00:00", "type": "pullrequest_comment", "id": 6547119}