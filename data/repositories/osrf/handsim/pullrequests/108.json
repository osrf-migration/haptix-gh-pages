{"rendered": {"description": {"raw": "Previously, if no Optitrack was connected, the Optitrack receiver thread started by HaptixControlPlugin would block continuously. This caused a segfault whenever ServerFixture unloaded a world containing HaptixControlPlugin.\r\n\r\nThis pull request implements polling in the Optitrack receiver so that it knows when to exit the packet reception loop. It also fixes a bug in the construction of the Optitrack thread in HaptixControlPlugin that was causing the thread to make its own copy of the Optitrack object.\r\n\r\nLots of help from @caguero on this one, thanks!\r\n\r\nbranch of [PR 107](#!/osrf/handsim/pull-request/107/include-serverfixture), please review 107 first.\r\n\r\n~~You will need Gazebo [PR 1588](https://bitbucket.org/osrf/gazebo/pull-request/1588/1569-fix-crash-in-hydraplugin/diff) in order to run the example test without crashing in the HydraPlugin destructor.~~ merged", "markup": "markdown", "html": "<p>Previously, if no Optitrack was connected, the Optitrack receiver thread started by HaptixControlPlugin would block continuously. This caused a segfault whenever ServerFixture unloaded a world containing HaptixControlPlugin.</p>\n<p>This pull request implements polling in the Optitrack receiver so that it knows when to exit the packet reception loop. It also fixes a bug in the construction of the Optitrack thread in HaptixControlPlugin that was causing the thread to make its own copy of the Optitrack object.</p>\n<p>Lots of help from @caguero on this one, thanks!</p>\n<p>branch of <a data-is-external-link=\"true\" href=\"#!/osrf/handsim/pull-request/107/include-serverfixture\" rel=\"nofollow\">PR 107</a>, please review 107 first.</p>\n<p><del>You will need Gazebo <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-request/1588/1569-fix-crash-in-hydraplugin/diff\" rel=\"nofollow\">PR 1588</a> in order to run the example test without crashing in the HydraPlugin destructor.</del> merged</p>", "type": "rendered"}, "title": {"raw": "Poll instead of blocking in Optitrack receiver", "markup": "markdown", "html": "<p>Poll instead of blocking in Optitrack receiver</p>", "type": "rendered"}}, "type": "pullrequest", "description": "Previously, if no Optitrack was connected, the Optitrack receiver thread started by HaptixControlPlugin would block continuously. This caused a segfault whenever ServerFixture unloaded a world containing HaptixControlPlugin.\r\n\r\nThis pull request implements polling in the Optitrack receiver so that it knows when to exit the packet reception loop. It also fixes a bug in the construction of the Optitrack thread in HaptixControlPlugin that was causing the thread to make its own copy of the Optitrack object.\r\n\r\nLots of help from @caguero on this one, thanks!\r\n\r\nbranch of [PR 107](#!/osrf/handsim/pull-request/107/include-serverfixture), please review 107 first.\r\n\r\n~~You will need Gazebo [PR 1588](https://bitbucket.org/osrf/gazebo/pull-request/1588/1569-fix-crash-in-hydraplugin/diff) in order to run the example test without crashing in the HydraPlugin destructor.~~ merged", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/pullrequests/108/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/diffstat/osrf/handsim:cf051651739b%0D540ee0aee6ad?from_pullrequest_id=108"}, "commits": {"href": "data/repositories/osrf/handsim/pullrequests/108/commits.json"}, "self": {"href": "data/repositories/osrf/handsim/pullrequests/108.json"}, "comments": {"href": "data/repositories/osrf/handsim/pullrequests/108/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/pullrequests/108/merge"}, "html": {"href": "#!/osrf/handsim/pull-requests/108"}, "activity": {"href": "data/repositories/osrf/handsim/pullrequests/108/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/diff/osrf/handsim:cf051651739b%0D540ee0aee6ad?from_pullrequest_id=108"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/pullrequests/108/approve"}, "statuses": {"href": "data/repositories/osrf/handsim/pullrequests/108/statuses_page=1.json"}}, "title": "Poll instead of blocking in Optitrack receiver", "close_source_branch": true, "reviewers": [], "id": 108, "destination": {"commit": {"hash": "540ee0aee6ad", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/handsim/commit/540ee0aee6ad.json"}, "html": {"href": "#!/osrf/handsim/commits/540ee0aee6ad"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "branch": {"name": "default"}}, "created_on": "2015-04-14T22:35:12.066538+00:00", "summary": {"raw": "Previously, if no Optitrack was connected, the Optitrack receiver thread started by HaptixControlPlugin would block continuously. This caused a segfault whenever ServerFixture unloaded a world containing HaptixControlPlugin.\r\n\r\nThis pull request implements polling in the Optitrack receiver so that it knows when to exit the packet reception loop. It also fixes a bug in the construction of the Optitrack thread in HaptixControlPlugin that was causing the thread to make its own copy of the Optitrack object.\r\n\r\nLots of help from @caguero on this one, thanks!\r\n\r\nbranch of [PR 107](#!/osrf/handsim/pull-request/107/include-serverfixture), please review 107 first.\r\n\r\n~~You will need Gazebo [PR 1588](https://bitbucket.org/osrf/gazebo/pull-request/1588/1569-fix-crash-in-hydraplugin/diff) in order to run the example test without crashing in the HydraPlugin destructor.~~ merged", "markup": "markdown", "html": "<p>Previously, if no Optitrack was connected, the Optitrack receiver thread started by HaptixControlPlugin would block continuously. This caused a segfault whenever ServerFixture unloaded a world containing HaptixControlPlugin.</p>\n<p>This pull request implements polling in the Optitrack receiver so that it knows when to exit the packet reception loop. It also fixes a bug in the construction of the Optitrack thread in HaptixControlPlugin that was causing the thread to make its own copy of the Optitrack object.</p>\n<p>Lots of help from @caguero on this one, thanks!</p>\n<p>branch of <a data-is-external-link=\"true\" href=\"#!/osrf/handsim/pull-request/107/include-serverfixture\" rel=\"nofollow\">PR 107</a>, please review 107 first.</p>\n<p><del>You will need Gazebo <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/pull-request/1588/1569-fix-crash-in-hydraplugin/diff\" rel=\"nofollow\">PR 1588</a> in order to run the example test without crashing in the HydraPlugin destructor.</del> merged</p>", "type": "rendered"}, "source": {"commit": {"hash": "bd1563fc6f13", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/handsim/commit/bd1563fc6f13.json"}, "html": {"href": "#!/osrf/handsim/commits/bd1563fc6f13"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "branch": {"name": "fix_optitrack_poll"}}, "comment_count": 21, "state": "MERGED", "task_count": 0, "participants": [{"role": "PARTICIPANT", "participated_on": "2015-05-04T22:54:40.015600+00:00", "type": "participant", "approved": false, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, {"role": "PARTICIPANT", "participated_on": "2015-04-28T22:35:22.229400+00:00", "type": "participant", "approved": true, "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}}, {"role": "PARTICIPANT", "participated_on": "2015-05-04T22:53:12.124457+00:00", "type": "participant", "approved": true, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}], "reason": "", "updated_on": "2015-05-05T22:57:43.499144+00:00", "author": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "merge_commit": {"hash": "cf051651739b", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/handsim/commit/cf051651739b.json"}, "html": {"href": "#!/osrf/handsim/commits/cf051651739b"}}}, "closed_by": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}