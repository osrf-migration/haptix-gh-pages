{"links": {"self": {"href": "data/repositories/osrf/handsim/pullrequests/85/comments/5775272.json"}, "html": {"href": "#!/osrf/handsim/pull-requests/85/_/diff#comment-5775272"}}, "parent": {"id": 5775098, "links": {"self": {"href": "data/repositories/osrf/handsim/pullrequests/85/comments/5775098.json"}, "html": {"href": "#!/osrf/handsim/pull-requests/85/_/diff#comment-5775098"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 85, "links": {"self": {"href": "data/repositories/osrf/handsim/pullrequests/85.json"}, "html": {"href": "#!/osrf/handsim/pull-requests/85"}}, "title": "add one more layer for motor transmission"}, "content": {"raw": "It contains a `gazebo::physics::JointPtr`, which either points to a real Gazebo Joint object, or is left NULL. When controller calls an equivalent Gazebo Joint API using HaptixGazeboJointHelper class, it either passes them through or get/store the temporary values for the non-existent joint.\n\nA pesudo-code example below:\n~~~\nHaptixGazeboJointHelper realJoint;\nrealJoint.SetJoint(realGazeboJointPtr);\nHaptixGazeboJointHelper noJoint;\n\nrealJoint.GetPosition(0);  // effectively calls realJoint->GetPosition(0) based on physic state\n\nnoJoint.SetPosition(10);  // sets noJoint.fakeJoint to 10\nnoJoint.GetPosition(0);  // returns noJoint.fakeJoint\n~~~\n\nThe reason is that we created artificial motor joints which do not exist in the Gazebo model for the arm (`indexm`, `middlem`, `ringm` and `pinkym`), and we want to manipulate these *fake joints*, but in a transparent way as the real joints.", "markup": "markdown", "html": "<p>It contains a <code>gazebo::physics::JointPtr</code>, which either points to a real Gazebo Joint object, or is left NULL. When controller calls an equivalent Gazebo Joint API using HaptixGazeboJointHelper class, it either passes them through or get/store the temporary values for the non-existent joint.</p>\n<p>A pesudo-code example below:</p>\n<div class=\"codehilite\"><pre><span></span>HaptixGazeboJointHelper realJoint;\nrealJoint.SetJoint(realGazeboJointPtr);\nHaptixGazeboJointHelper noJoint;\n\nrealJoint.GetPosition(0);  // effectively calls realJoint-&gt;GetPosition(0) based on physic state\n\nnoJoint.SetPosition(10);  // sets noJoint.fakeJoint to 10\nnoJoint.GetPosition(0);  // returns noJoint.fakeJoint\n</pre></div>\n\n\n<p>The reason is that we created artificial motor joints which do not exist in the Gazebo model for the arm (<code>indexm</code>, <code>middlem</code>, <code>ringm</code> and <code>pinkym</code>), and we want to manipulate these <em>fake joints</em>, but in a transparent way as the real joints.</p>", "type": "rendered"}, "created_on": "2015-03-19T22:47:45.557903+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-03-19T22:47:45.565484+00:00", "type": "pullrequest_comment", "id": 5775272}