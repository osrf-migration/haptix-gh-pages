{"rendered": {"reason": {"raw": "We will include the arm directly in the world file.", "markup": "markdown", "html": "<p>We will include the arm directly in the world file.</p>", "type": "rendered"}, "description": {"raw": "It loads gazebo as a background process with the arat world and then tries to spawn the apl arm. It took some trickery to identify the case in which the arm fails to load, since the `gz model` command returns zero, and the failure happens on the server side (I think this would have to be a service call or request/response to give proper feedback to the `gz model` call). To check that the model is spawned correctly, it uses `gz model -i` and counts the number of visuals, since a failure will create an almost empty model with the specified name.\r\n\r\nAlso, the script passes all arguments to the `gazebo` call, so you can do things like the following:\r\n~~~\r\nhandsim_apl --verbose\r\nhandsim_apl -u\r\nhandsim_apl -e bullet # probably won't work\r\n~~~", "markup": "markdown", "html": "<p>It loads gazebo as a background process with the arat world and then tries to spawn the apl arm. It took some trickery to identify the case in which the arm fails to load, since the <code>gz model</code> command returns zero, and the failure happens on the server side (I think this would have to be a service call or request/response to give proper feedback to the <code>gz model</code> call). To check that the model is spawned correctly, it uses <code>gz model -i</code> and counts the number of visuals, since a failure will create an almost empty model with the specified name.</p>\n<p>Also, the script passes all arguments to the <code>gazebo</code> call, so you can do things like the following:</p>\n<div class=\"codehilite\"><pre><span></span>handsim_apl --verbose\nhandsim_apl -u\nhandsim_apl -e bullet # probably won&#39;t work\n</pre></div>", "type": "rendered"}, "title": {"raw": "Add startup script for handsim with APL arm ", "markup": "markdown", "html": "<p>Add startup script for handsim with APL arm </p>", "type": "rendered"}}, "type": "pullrequest", "description": "It loads gazebo as a background process with the arat world and then tries to spawn the apl arm. It took some trickery to identify the case in which the arm fails to load, since the `gz model` command returns zero, and the failure happens on the server side (I think this would have to be a service call or request/response to give proper feedback to the `gz model` call). To check that the model is spawned correctly, it uses `gz model -i` and counts the number of visuals, since a failure will create an almost empty model with the specified name.\r\n\r\nAlso, the script passes all arguments to the `gazebo` call, so you can do things like the following:\r\n~~~\r\nhandsim_apl --verbose\r\nhandsim_apl -u\r\nhandsim_apl -e bullet # probably won't work\r\n~~~", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/pullrequests/13/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/diffstat/osrf/handsim:0b9fe0fefa7f%0D5bf06deb2359?from_pullrequest_id=13"}, "commits": {"href": "data/repositories/osrf/handsim/pullrequests/13/commits.json"}, "self": {"href": "data/repositories/osrf/handsim/pullrequests/13.json"}, "comments": {"href": "data/repositories/osrf/handsim/pullrequests/13/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/pullrequests/13/merge"}, "html": {"href": "#!/osrf/handsim/pull-requests/13"}, "activity": {"href": "data/repositories/osrf/handsim/pullrequests/13/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/diff/osrf/handsim:0b9fe0fefa7f%0D5bf06deb2359?from_pullrequest_id=13"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/handsim/pullrequests/13/approve"}, "statuses": {"href": "data/repositories/osrf/handsim/pullrequests/13/statuses_page=1.json"}}, "title": "Add startup script for handsim with APL arm ", "close_source_branch": false, "reviewers": [{"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}], "id": 13, "destination": {"commit": {"hash": "5bf06deb2359", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/handsim/commit/5bf06deb2359.json"}, "html": {"href": "#!/osrf/handsim/commits/5bf06deb2359"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "branch": {"name": "default"}}, "created_on": "2014-10-31T21:14:17.426856+00:00", "summary": {"raw": "It loads gazebo as a background process with the arat world and then tries to spawn the apl arm. It took some trickery to identify the case in which the arm fails to load, since the `gz model` command returns zero, and the failure happens on the server side (I think this would have to be a service call or request/response to give proper feedback to the `gz model` call). To check that the model is spawned correctly, it uses `gz model -i` and counts the number of visuals, since a failure will create an almost empty model with the specified name.\r\n\r\nAlso, the script passes all arguments to the `gazebo` call, so you can do things like the following:\r\n~~~\r\nhandsim_apl --verbose\r\nhandsim_apl -u\r\nhandsim_apl -e bullet # probably won't work\r\n~~~", "markup": "markdown", "html": "<p>It loads gazebo as a background process with the arat world and then tries to spawn the apl arm. It took some trickery to identify the case in which the arm fails to load, since the <code>gz model</code> command returns zero, and the failure happens on the server side (I think this would have to be a service call or request/response to give proper feedback to the <code>gz model</code> call). To check that the model is spawned correctly, it uses <code>gz model -i</code> and counts the number of visuals, since a failure will create an almost empty model with the specified name.</p>\n<p>Also, the script passes all arguments to the <code>gazebo</code> call, so you can do things like the following:</p>\n<div class=\"codehilite\"><pre><span></span>handsim_apl --verbose\nhandsim_apl -u\nhandsim_apl -e bullet # probably won&#39;t work\n</pre></div>", "type": "rendered"}, "source": {"commit": {"hash": "0b9fe0fefa7f", "type": "commit", "links": {"self": {"href": "data/repositories/osrf/handsim/commit/0b9fe0fefa7f.json"}, "html": {"href": "#!/osrf/handsim/commits/0b9fe0fefa7f"}}}, "repository": {"links": {"self": {"href": "data/repositories/osrf/handsim.json"}, "html": {"href": "#!/osrf/handsim"}, "avatar": {"href": "data/bytebucket.org/ravatar/{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}ts=c_plus_plus"}}, "type": "repository", "name": "handsim", "full_name": "osrf/handsim", "uuid": "{9c7d89af-6eb6-40b1-9f69-da1ae9d129ce}"}, "branch": {"name": "startup_script"}}, "comment_count": 11, "state": "DECLINED", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": "2014-10-31T21:29:06.782694+00:00", "type": "participant", "approved": true, "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}}, {"role": "PARTICIPANT", "participated_on": "2014-11-03T20:02:47.330008+00:00", "type": "participant", "approved": false, "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}, {"role": "PARTICIPANT", "participated_on": "2014-11-03T17:06:13.351428+00:00", "type": "participant", "approved": true, "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}}, {"role": "PARTICIPANT", "participated_on": "2014-11-04T03:43:53.170607+00:00", "type": "participant", "approved": false, "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}}, {"role": "PARTICIPANT", "participated_on": "2014-10-31T22:15:53.570966+00:00", "type": "participant", "approved": false, "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}}], "reason": "We will include the arm directly in the world file.", "updated_on": "2014-11-04T03:43:53.190678+00:00", "author": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "merge_commit": null, "closed_by": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}}