{"links": {"self": {"href": "data/repositories/osrf/haptix-comm/pullrequests/26/comments/4621676.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix-comm/diff/osrf/haptix-comm:ec0cb3d2b2ff..b46442ce2b96?path=src%2Fhaptix.cc"}, "html": {"href": "#!/osrf/haptix-comm/pull-requests/26/_/diff#comment-4621676"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 26, "links": {"self": {"href": "data/repositories/osrf/haptix-comm/pullrequests/26.json"}, "html": {"href": "#!/osrf/haptix-comm/pull-requests/26"}}, "title": "Implemented hx_readsensors"}, "content": {"raw": "For trying to reduce the indentation levels (a bit easier to read) we could use something like:\n\n```\n#!c++\n\nif (! executed)\n{\n   std::cerr << \"hx_readsensors() Service call failed.\" << std::endl;\n   return hxBAD;\n}\n\nif (! result)\n{\n   # It will help if this error message is different from previous\n   std::cerr << \"hx_readsensors() Service call failed.\" << std::endl;\n   return hxBAD;\n}\n\n// Fill the struct with the response.\nfor (int i = 0; i < rep.motor_pos_size(); ++i)\n{\n     _sensor->motor_pos[i] = rep.motor_pos(i);\n     _sensor->motor_vel[i] = rep.motor_vel(i);\n...\n\nreturn hxOK;\n}\n```\n", "markup": "markdown", "html": "<p>For trying to reduce the indentation levels (a bit easier to read) we could use something like:</p>\n<div class=\"codehilite language-c++\"><pre><span></span><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span> <span class=\"n\">executed</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n   <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;hx_readsensors() Service call failed.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n   <span class=\"k\">return</span> <span class=\"n\">hxBAD</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n   <span class=\"cp\"># It will help if this error message is different from previous</span>\n   <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cerr</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;hx_readsensors() Service call failed.&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n   <span class=\"k\">return</span> <span class=\"n\">hxBAD</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// Fill the struct with the response.</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">rep</span><span class=\"p\">.</span><span class=\"n\">motor_pos_size</span><span class=\"p\">();</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n     <span class=\"n\">_sensor</span><span class=\"o\">-&gt;</span><span class=\"n\">motor_pos</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">rep</span><span class=\"p\">.</span><span class=\"n\">motor_pos</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n     <span class=\"n\">_sensor</span><span class=\"o\">-&gt;</span><span class=\"n\">motor_vel</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">rep</span><span class=\"p\">.</span><span class=\"n\">motor_vel</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"p\">...</span>\n\n<span class=\"k\">return</span> <span class=\"n\">hxOK</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-01-14T00:49:25.508424+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {"to": 224, "from": null, "outdated": true, "path": "src/haptix.cc"}, "updated_on": "2015-01-14T00:49:25.515598+00:00", "type": "pullrequest_comment", "id": 4621676}