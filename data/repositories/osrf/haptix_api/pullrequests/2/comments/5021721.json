{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021721.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021721"}}, "parent": {"id": 5021362, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021362.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021362"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "It doesn't mean we should throttle, but it doesn't mean we shouldn't either. The limited update rate of the robot can be simulated either way. I think the approach in Mujoco makes more sense because the user will gain nothing from receiving the same data many times, and they can always start a parallel thread if they want to do something else during a blocking call. You probably have your reasons, so we should make the API agnostic to this.\n\nActually here is an idea that can resolve the issue and solve another problem at the same time. The user should be able to specify which fields of hxCommand are to be used in a given update, because they may not want to change the gains for example.  So what if we introduce four flags in hxCommand, one for each of the four arrays? If all are set to 1, hx_command behaves as it does now. If all are set to 0, it becomes identical to your readsensors function. And all other combinations are also possible. In everyday use people will likely enable position updates and disable the other three fields.", "markup": "markdown", "html": "<p>It doesn't mean we should throttle, but it doesn't mean we shouldn't either. The limited update rate of the robot can be simulated either way. I think the approach in Mujoco makes more sense because the user will gain nothing from receiving the same data many times, and they can always start a parallel thread if they want to do something else during a blocking call. You probably have your reasons, so we should make the API agnostic to this.</p>\n<p>Actually here is an idea that can resolve the issue and solve another problem at the same time. The user should be able to specify which fields of hxCommand are to be used in a given update, because they may not want to change the gains for example.  So what if we introduce four flags in hxCommand, one for each of the four arrays? If all are set to 1, hx_command behaves as it does now. If all are set to 0, it becomes identical to your readsensors function. And all other combinations are also possible. In everyday use people will likely enable position updates and disable the other three fields.</p>", "type": "rendered"}, "created_on": "2015-02-07T00:59:54.183829+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T00:59:54.194516+00:00", "type": "pullrequest_comment", "id": 5021721}