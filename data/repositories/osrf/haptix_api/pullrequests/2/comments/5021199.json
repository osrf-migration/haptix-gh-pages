{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021199.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021199"}}, "parent": {"id": 5020420, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020420.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020420"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "If hx_update is asynchronous, and the simulator is buffering sensor data and updating it at the specified rate independent of user commands, that makes sense.  I understand this is how Gazebo works, but this is not how Mujoco works (or any of the robots I know of).  Instead Mujoco simply runs in real-time, and whenever it receives an update request is sets the motor commands, reads the instantaneous sensor data, and returns after a delay corresponding to the specified update rate.  In this context, how is hx_readsensors supposed to behave?  In particular, if the user interleaves hx_update and hx_sensor, they would be losing half of the command bandwidth...", "markup": "markdown", "html": "<p>If hx_update is asynchronous, and the simulator is buffering sensor data and updating it at the specified rate independent of user commands, that makes sense.  I understand this is how Gazebo works, but this is not how Mujoco works (or any of the robots I know of).  Instead Mujoco simply runs in real-time, and whenever it receives an update request is sets the motor commands, reads the instantaneous sensor data, and returns after a delay corresponding to the specified update rate.  In this context, how is hx_readsensors supposed to behave?  In particular, if the user interleaves hx_update and hx_sensor, they would be losing half of the command bandwidth...</p>", "type": "rendered"}, "created_on": "2015-02-06T23:36:12.052897+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-06T23:36:12.063913+00:00", "type": "pullrequest_comment", "id": 5021199}