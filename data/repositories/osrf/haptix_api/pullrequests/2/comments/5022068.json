{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022068.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022068"}}, "parent": {"id": 5021823, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021823.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021823"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I am fine with leaving hx_readsensor as long as we have the flags.  But we should call them _flag instead of _count.  The latter implies that you can select a subset, and yet a count is not the right way to specify subsets; if we want to allow such functionality we would need one select bit for each float.  So let's keep it simple and stick to a binary flag (0: disable, anything other than 0: enable).", "markup": "markdown", "html": "<p>I am fine with leaving hx_readsensor as long as we have the flags.  But we should call them _flag instead of _count.  The latter implies that you can select a subset, and yet a count is not the right way to specify subsets; if we want to allow such functionality we would need one select bit for each float.  So let's keep it simple and stick to a binary flag (0: disable, anything other than 0: enable).</p>", "type": "rendered"}, "created_on": "2015-02-07T02:40:40.859152+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T02:40:40.873169+00:00", "type": "pullrequest_comment", "id": 5022068}