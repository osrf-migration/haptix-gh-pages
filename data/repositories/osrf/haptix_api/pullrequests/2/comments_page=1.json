{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018348.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:9490ff23bdfa..f808bcf3421c?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018348"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "lack of a \\return doxygen statement?", "markup": "markdown", "html": "<p>lack of a \\return doxygen statement?</p>", "type": "rendered"}, "created_on": "2015-02-06T20:09:22.864054+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {"to": 320, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T20:09:22.875307+00:00", "type": "pullrequest_comment", "id": 5018348}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018386.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018386"}}, "parent": {"id": 5018348, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018348.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018348"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Fixed.", "markup": "markdown", "html": "<p>Fixed.</p>", "type": "rendered"}, "created_on": "2015-02-06T20:11:04.353582+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T20:11:04.368526+00:00", "type": "pullrequest_comment", "id": 5018386}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018405.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:9490ff23bdfa..f808bcf3421c?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018405"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Do the default values in this function make sense? If they do, we could include them in the doxy documentation.", "markup": "markdown", "html": "<p>Do the default values in this function make sense? If they do, we could include them in the doxy documentation.</p>", "type": "rendered"}, "created_on": "2015-02-06T20:12:08.115716+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {"to": 278, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T20:12:08.125686+00:00", "type": "pullrequest_comment", "id": 5018405}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018444.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018444"}}, "parent": {"id": 5018405, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018405.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018405"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Updated the doxygen.", "markup": "markdown", "html": "<p>Updated the doxygen.</p>", "type": "rendered"}, "created_on": "2015-02-06T20:14:59.666082+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T20:14:59.843533+00:00", "type": "pullrequest_comment", "id": 5018444}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018500.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:6dd8e86db64b..51d2158fed2d?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018500"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Probably left here by some kind of compatibility reasons, right? Do we really need to keep it?", "markup": "markdown", "html": "<p>Probably left here by some kind of compatibility reasons, right? Do we really need to keep it?</p>", "type": "rendered"}, "created_on": "2015-02-06T20:17:38.954464+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "inline": {"to": 227, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T20:17:38.962362+00:00", "type": "pullrequest_comment", "id": 5018500}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018545.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018545"}}, "parent": {"id": 5018500, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018500.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018500"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "we need the timestamp field, it is a requirement of the FDA/DARPA people. please keep it, I am planning on updating this comment and adding hxTime to hxSensor in a different branch.", "markup": "markdown", "html": "<p>we need the timestamp field, it is a requirement of the FDA/DARPA people. please keep it, I am planning on updating this comment and adding hxTime to hxSensor in a different branch.</p>", "type": "rendered"}, "created_on": "2015-02-06T20:19:48.329879+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T20:19:48.342846+00:00", "type": "pullrequest_comment", "id": 5018545}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018541.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018541"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "conflicts", "markup": "markdown", "html": "<p>conflicts</p>", "type": "rendered"}, "created_on": "2015-02-06T20:19:41.661714+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T20:19:41.671712+00:00", "type": "pullrequest_comment", "id": 5018541}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018621.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018621"}}, "parent": {"id": 5018541, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018541.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018541"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "fixed", "markup": "markdown", "html": "<p>fixed</p>", "type": "rendered"}, "created_on": "2015-02-06T20:24:01.571869+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T20:24:01.591500+00:00", "type": "pullrequest_comment", "id": 5018621}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018796.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018796"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Greetings all,\nI have a child branch of this branch, [`match_api_2`](#!/osrf/haptix_api/branch/match_api_2?dest=match_api#diff), which makes the following changes proposed in a recent email from Justin at DARPA and other necessary API changes:\n\n1d. hxSensor field may need to include timestamp as a parameter\n\n1e. The timestamp needs to be a structure.  There is no need to argue about this, the structure version conforms with a number of paradigms out there and can be reduced/converted to seconds if necessary\n\n1g. There is no hx_getdeviceinfo, only hx_getrobotinfo\n\nAdded joint limits and renamed existing limit struct \"motorlimits\"\n\n@gerkey, are there any other API specifications from Justin or Heather that should get addressed here?\n\nIf you'd like to merge my branch with this PR, go ahead. Otherwise I will make another PR once this is merged. Then when the dust settles we can update haptix-comm and handsim.", "markup": "markdown", "html": "<p>Greetings all,\nI have a child branch of this branch, <a data-is-external-link=\"true\" href=\"#!/osrf/haptix_api/branch/match_api_2?dest=match_api#diff\" rel=\"nofollow\"><code>match_api_2</code></a>, which makes the following changes proposed in a recent email from Justin at DARPA and other necessary API changes:</p>\n<p>1d. hxSensor field may need to include timestamp as a parameter</p>\n<p>1e. The timestamp needs to be a structure.  There is no need to argue about this, the structure version conforms with a number of paradigms out there and can be reduced/converted to seconds if necessary</p>\n<p>1g. There is no hx_getdeviceinfo, only hx_getrobotinfo</p>\n<p>Added joint limits and renamed existing limit struct \"motorlimits\"</p>\n<p>@gerkey, are there any other API specifications from Justin or Heather that should get addressed here?</p>\n<p>If you'd like to merge my branch with this PR, go ahead. Otherwise I will make another PR once this is merged. Then when the dust settles we can update haptix-comm and handsim.</p>", "type": "rendered"}, "created_on": "2015-02-06T20:34:43.732160+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-06T20:34:43.753262+00:00", "type": "pullrequest_comment", "id": 5018796}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5019386.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5019386"}}, "parent": {"id": 5018796, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018796.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018796"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Thanks. Merged.", "markup": "markdown", "html": "<p>Thanks. Merged.</p>", "type": "rendered"}, "created_on": "2015-02-06T21:10:58.458465+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T21:10:58.468659+00:00", "type": "pullrequest_comment", "id": 5019386}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018818.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018818"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I was not able to identify which time representation are we using when defining the timestamps. _hxTime could be a data structure representing an abstract relative amount of time. If so, when the functions are using the timestamps, it could help to indicate which is the reference to apply this relative magnitude.\n\nIf _hxTime is using another system to encode an absolute time (like EPOCH) we could mention that.", "markup": "markdown", "html": "<p>I was not able to identify which time representation are we using when defining the timestamps. _hxTime could be a data structure representing an abstract relative amount of time. If so, when the functions are using the timestamps, it could help to indicate which is the reference to apply this relative magnitude.</p>\n<p>If _hxTime is using another system to encode an absolute time (like EPOCH) we could mention that.</p>", "type": "rendered"}, "created_on": "2015-02-06T20:36:07.453585+00:00", "user": {"display_name": "Jose Luis Rivero", "uuid": "{d12309b2-f745-42ee-b119-aec4fcdf81fe}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D"}, "html": {"href": "https://bitbucket.org/%7Bd12309b2-f745-42ee-b119-aec4fcdf81fe%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/109284c8b83411dbc7492138f6167e9ed=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJR-5.png"}}, "nickname": "Jose Luis Rivero", "type": "user", "account_id": "557058:155a32e2-420c-4d50-98e0-0e722f63f906"}, "updated_on": "2015-02-06T20:36:07.467549+00:00", "type": "pullrequest_comment", "id": 5018818}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5019541.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5019541"}}, "parent": {"id": 5018818, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018818.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018818"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Great point. The timestamp field is not currently implemented, which is why we haven't ironed out these details yet. Let's resolve that now.\n\nIf we go with relative time, it would make sense to make the reference point be the time when the simulator/device starts up, or when the simulator/device/hxserver and the hxclient first connect. The choice is somewhat arbitrary, because in most cases the timestamp will be used to judge the relative age of messages, and the reference point doesn't really matter. I think I like absolute time better, because the user can then choose the reference point, and it also simplifies the implementation detail of tracking the timestamp. The only issue with using EPOCH, however, is that I believe it is UNIX-specific, and this API must support Windows machines. Can we resolve this in the implementation of haptix-comm, or will this be an issue in cross-platform communication?", "markup": "markdown", "html": "<p>Great point. The timestamp field is not currently implemented, which is why we haven't ironed out these details yet. Let's resolve that now.</p>\n<p>If we go with relative time, it would make sense to make the reference point be the time when the simulator/device starts up, or when the simulator/device/hxserver and the hxclient first connect. The choice is somewhat arbitrary, because in most cases the timestamp will be used to judge the relative age of messages, and the reference point doesn't really matter. I think I like absolute time better, because the user can then choose the reference point, and it also simplifies the implementation detail of tracking the timestamp. The only issue with using EPOCH, however, is that I believe it is UNIX-specific, and this API must support Windows machines. Can we resolve this in the implementation of haptix-comm, or will this be an issue in cross-platform communication?</p>", "type": "rendered"}, "created_on": "2015-02-06T21:21:11.428340+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-06T21:21:11.437558+00:00", "type": "pullrequest_comment", "id": 5019541}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5019609.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5019609"}}, "parent": {"id": 5018818, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5018818.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5018818"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "The meaning of hxTime will depend on whether they connect to a simulator or to a robot.\n\n1. Simulation: Time since simulation started\n1. Robot: System time (EPOCH)\n\nWe could add a boolean to hxTime that states it's simulation time.", "markup": "markdown", "html": "<p>The meaning of hxTime will depend on whether they connect to a simulator or to a robot.</p>\n<ol>\n<li>Simulation: Time since simulation started</li>\n<li>Robot: System time (EPOCH)</li>\n</ol>\n<p>We could add a boolean to hxTime that states it's simulation time.</p>", "type": "rendered"}, "created_on": "2015-02-06T21:27:30.106364+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T21:27:30.116194+00:00", "type": "pullrequest_comment", "id": 5019609}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5019645.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5019645"}}, "parent": {"id": 5019609, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5019609.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5019609"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Why not system time for simulation?", "markup": "markdown", "html": "<p>Why not system time for simulation?</p>", "type": "rendered"}, "created_on": "2015-02-06T21:29:48.424738+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-06T21:29:48.439494+00:00", "type": "pullrequest_comment", "id": 5019645}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020177.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020177"}}, "parent": {"id": 5019645, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5019645.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5019645"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "If the simulation runs slower than real time, you would need to diverge from the system clock.", "markup": "markdown", "html": "<p>If the simulation runs slower than real time, you would need to diverge from the system clock.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:00:59.239581+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T22:00:59.252059+00:00", "type": "pullrequest_comment", "id": 5020177}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020134.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020134"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Some comments on the current version:\n\n\nIMUs do not return orientation, only linear acceleration and angular velocity.  Computing absolute orientation is the job of an estimator, usually running in user code.  Some fancier IMUs can have this functionality built in, but the IMUs in prosthetic devices are tiny chips embedded in the fingertips.\n\n\nAssuming this is a C API and not a C++ API, we cannot have default parameters like \"int_port = 0\".  These are not supported in C.\n\n\nTime is simulation time, not system time. The user has no reason to care about the system time.\n\n\nThe time structure should have seconds and milliseconds, or maybe mircoseconds, but non nanoseconds -- unless ODE is worse than I thought and you need nanosecond timesteps to simulate :)  If the simulation time starts at 0 and increments by 1 millisecond, having nanosecond resolution only adds unnecessary zeros that will confuse the user.\n\n\nThe time structure should only be present in hxSensor, not in hxCommand.  The simulator does not care what time it is on the user's machine; it simply runs in real-time.\n\n\nI am not sure why you added the hx_readsensors function. We designed this interface around a single hx_update function which takes motor commands and returns sensor data...  why have another function for reading sensor data?\n\n\nhxBAD and hxHORRIBLE were meant as a joke, time to replace them with:\n\ntypedef enum\n{\n\thxOK = 0,\n\thxERROR\n} hxResult;\n", "markup": "markdown", "html": "<p>Some comments on the current version:</p>\n<p>IMUs do not return orientation, only linear acceleration and angular velocity.  Computing absolute orientation is the job of an estimator, usually running in user code.  Some fancier IMUs can have this functionality built in, but the IMUs in prosthetic devices are tiny chips embedded in the fingertips.</p>\n<p>Assuming this is a C API and not a C++ API, we cannot have default parameters like \"int_port = 0\".  These are not supported in C.</p>\n<p>Time is simulation time, not system time. The user has no reason to care about the system time.</p>\n<p>The time structure should have seconds and milliseconds, or maybe mircoseconds, but non nanoseconds -- unless ODE is worse than I thought and you need nanosecond timesteps to simulate :)  If the simulation time starts at 0 and increments by 1 millisecond, having nanosecond resolution only adds unnecessary zeros that will confuse the user.</p>\n<p>The time structure should only be present in hxSensor, not in hxCommand.  The simulator does not care what time it is on the user's machine; it simply runs in real-time.</p>\n<p>I am not sure why you added the hx_readsensors function. We designed this interface around a single hx_update function which takes motor commands and returns sensor data...  why have another function for reading sensor data?</p>\n<p>hxBAD and hxHORRIBLE were meant as a joke, time to replace them with:</p>\n<p>typedef enum\n{\n    hxOK = 0,\n    hxERROR\n} hxResult;</p>", "type": "rendered"}, "created_on": "2015-02-06T21:58:46.661669+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-06T21:58:46.677641+00:00", "type": "pullrequest_comment", "id": 5020134}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020341.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020341"}}, "parent": {"id": 5020134, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020134.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020134"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I think the motivation for including nano-seconds is to match the Unix `timespec` definition in [time.h](http://pubs.opengroup.org/onlinepubs/007908775/xsh/time.h.html)", "markup": "markdown", "html": "<p>I think the motivation for including nano-seconds is to match the Unix <code>timespec</code> definition in <a data-is-external-link=\"true\" href=\"http://pubs.opengroup.org/onlinepubs/007908775/xsh/time.h.html\" rel=\"nofollow\">time.h</a></p>", "type": "rendered"}, "created_on": "2015-02-06T22:13:09.297219+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T22:13:09.307417+00:00", "type": "pullrequest_comment", "id": 5020341}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020346.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020346"}}, "parent": {"id": 5020134, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020134.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020134"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "* I'll create two `hx_connect` functions, one that does not have a host/port and one that does.\n\n* The time structure is correct as is.\n\n* The hx_readsensors exists for the case when a user wants to read sensor information, but does not want to send a command.", "markup": "markdown", "html": "<ul>\n<li>\n<p>I'll create two <code>hx_connect</code> functions, one that does not have a host/port and one that does.</p>\n</li>\n<li>\n<p>The time structure is correct as is.</p>\n</li>\n<li>\n<p>The hx_readsensors exists for the case when a user wants to read sensor information, but does not want to send a command.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2015-02-06T22:13:28.673418+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T22:13:28.681795+00:00", "type": "pullrequest_comment", "id": 5020346}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020420.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020420"}}, "parent": {"id": 5020346, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020346.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020346"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Indeed, we designed the `hx_readsensors` function after implementing and using the proposed API and determined that it was a necessity to make the API more flexible. It also gives the option of having a \"listener\" process that gets sensors data but does not effect any change on the robot. For example, if a team wanted to design an haptic feedback device that buzzes upon receiving contact sensor information, they could write a C function that uses `hx_readsensors` without having to know what joint positions are commanded by the main controller process.\n\nImplementing `hx_readsensors` doesn't require much overhead, since its functionality is a strict subset of `hx_update`.", "markup": "markdown", "html": "<p>Indeed, we designed the <code>hx_readsensors</code> function after implementing and using the proposed API and determined that it was a necessity to make the API more flexible. It also gives the option of having a \"listener\" process that gets sensors data but does not effect any change on the robot. For example, if a team wanted to design an haptic feedback device that buzzes upon receiving contact sensor information, they could write a C function that uses <code>hx_readsensors</code> without having to know what joint positions are commanded by the main controller process.</p>\n<p>Implementing <code>hx_readsensors</code> doesn't require much overhead, since its functionality is a strict subset of <code>hx_update</code>.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:19:28.250161+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-06T22:19:28.259935+00:00", "type": "pullrequest_comment", "id": 5020420}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021199.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021199"}}, "parent": {"id": 5020420, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020420.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020420"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "If hx_update is asynchronous, and the simulator is buffering sensor data and updating it at the specified rate independent of user commands, that makes sense.  I understand this is how Gazebo works, but this is not how Mujoco works (or any of the robots I know of).  Instead Mujoco simply runs in real-time, and whenever it receives an update request is sets the motor commands, reads the instantaneous sensor data, and returns after a delay corresponding to the specified update rate.  In this context, how is hx_readsensors supposed to behave?  In particular, if the user interleaves hx_update and hx_sensor, they would be losing half of the command bandwidth...", "markup": "markdown", "html": "<p>If hx_update is asynchronous, and the simulator is buffering sensor data and updating it at the specified rate independent of user commands, that makes sense.  I understand this is how Gazebo works, but this is not how Mujoco works (or any of the robots I know of).  Instead Mujoco simply runs in real-time, and whenever it receives an update request is sets the motor commands, reads the instantaneous sensor data, and returns after a delay corresponding to the specified update rate.  In this context, how is hx_readsensors supposed to behave?  In particular, if the user interleaves hx_update and hx_sensor, they would be losing half of the command bandwidth...</p>", "type": "rendered"}, "created_on": "2015-02-06T23:36:12.052897+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-06T23:36:12.063913+00:00", "type": "pullrequest_comment", "id": 5021199}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021362.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021362"}}, "parent": {"id": 5021199, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021199.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021199"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "It was my understanding that the update rate for the HAPTIX program is the minimum rate (lower bound) at which teams are capable of receiving information from the complete system (optitrack -> simulation -> user control code) and the minimum rate at which simulation responds to updates. It does not mean that we should throttle the rate at which teams request the information to that rate. A team should be able to request information at say 500Hz, if they so desire. They will receive duplicate sensor data if we are only updating the simulation state at 50Hz, but that's okay. \n\nQuote from Justin, \"...left to the teams to poll and drive the virtual limb as fast as they want, with new data being updated in simulation at 50 Hz no matter how many requests it gets.  It will be up to the teams to specific their polling rate...\"", "markup": "markdown", "html": "<p>It was my understanding that the update rate for the HAPTIX program is the minimum rate (lower bound) at which teams are capable of receiving information from the complete system (optitrack -&gt; simulation -&gt; user control code) and the minimum rate at which simulation responds to updates. It does not mean that we should throttle the rate at which teams request the information to that rate. A team should be able to request information at say 500Hz, if they so desire. They will receive duplicate sensor data if we are only updating the simulation state at 50Hz, but that's okay. </p>\n<p>Quote from Justin, \"...left to the teams to poll and drive the virtual limb as fast as they want, with new data being updated in simulation at 50 Hz no matter how many requests it gets.  It will be up to the teams to specific their polling rate...\"</p>", "type": "rendered"}, "created_on": "2015-02-06T23:59:13.954502+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T23:59:13.972142+00:00", "type": "pullrequest_comment", "id": 5021362}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021721.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021721"}}, "parent": {"id": 5021362, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021362.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021362"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "It doesn't mean we should throttle, but it doesn't mean we shouldn't either. The limited update rate of the robot can be simulated either way. I think the approach in Mujoco makes more sense because the user will gain nothing from receiving the same data many times, and they can always start a parallel thread if they want to do something else during a blocking call. You probably have your reasons, so we should make the API agnostic to this.\n\nActually here is an idea that can resolve the issue and solve another problem at the same time. The user should be able to specify which fields of hxCommand are to be used in a given update, because they may not want to change the gains for example.  So what if we introduce four flags in hxCommand, one for each of the four arrays? If all are set to 1, hx_command behaves as it does now. If all are set to 0, it becomes identical to your readsensors function. And all other combinations are also possible. In everyday use people will likely enable position updates and disable the other three fields.", "markup": "markdown", "html": "<p>It doesn't mean we should throttle, but it doesn't mean we shouldn't either. The limited update rate of the robot can be simulated either way. I think the approach in Mujoco makes more sense because the user will gain nothing from receiving the same data many times, and they can always start a parallel thread if they want to do something else during a blocking call. You probably have your reasons, so we should make the API agnostic to this.</p>\n<p>Actually here is an idea that can resolve the issue and solve another problem at the same time. The user should be able to specify which fields of hxCommand are to be used in a given update, because they may not want to change the gains for example.  So what if we introduce four flags in hxCommand, one for each of the four arrays? If all are set to 1, hx_command behaves as it does now. If all are set to 0, it becomes identical to your readsensors function. And all other combinations are also possible. In everyday use people will likely enable position updates and disable the other three fields.</p>", "type": "rendered"}, "created_on": "2015-02-07T00:59:54.183829+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T00:59:54.194516+00:00", "type": "pullrequest_comment", "id": 5021721}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021823.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021823"}}, "parent": {"id": 5021721, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021721.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021721"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I added counts for each array in hxCommand.\n\nI'll leave `hx_readsensor`, which can be implemented as a function that sets hxCommand appropriately.", "markup": "markdown", "html": "<p>I added counts for each array in hxCommand.</p>\n<p>I'll leave <code>hx_readsensor</code>, which can be implemented as a function that sets hxCommand appropriately.</p>", "type": "rendered"}, "created_on": "2015-02-07T01:28:13.186817+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-07T01:28:13.196640+00:00", "type": "pullrequest_comment", "id": 5021823}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022068.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022068"}}, "parent": {"id": 5021823, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021823.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021823"}}, "depth": 7}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I am fine with leaving hx_readsensor as long as we have the flags.  But we should call them _flag instead of _count.  The latter implies that you can select a subset, and yet a count is not the right way to specify subsets; if we want to allow such functionality we would need one select bit for each float.  So let's keep it simple and stick to a binary flag (0: disable, anything other than 0: enable).", "markup": "markdown", "html": "<p>I am fine with leaving hx_readsensor as long as we have the flags.  But we should call them _flag instead of _count.  The latter implies that you can select a subset, and yet a count is not the right way to specify subsets; if we want to allow such functionality we would need one select bit for each float.  So let's keep it simple and stick to a binary flag (0: disable, anything other than 0: enable).</p>", "type": "rendered"}, "created_on": "2015-02-07T02:40:40.859152+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T02:40:40.873169+00:00", "type": "pullrequest_comment", "id": 5022068}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022087.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022087"}}, "parent": {"id": 5022068, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022068.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022068"}}, "depth": 8}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Quite right, done.", "markup": "markdown", "html": "<p>Quite right, done.</p>", "type": "rendered"}, "created_on": "2015-02-07T02:54:43.671570+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-07T02:54:43.684557+00:00", "type": "pullrequest_comment", "id": 5022087}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020607.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020607"}}, "parent": {"id": 5020134, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020134.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020134"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "In branch `scpeters` (4e6bea4bd35f), I have made the following changes:\n\n* removed the IMU_orientation field from hxSensor\n* added additional description of the `IMU_linacc` and `IMU_angvel` fields\n* added units for the motor gains", "markup": "markdown", "html": "<p>In branch <code>scpeters</code> (<a href=\"#!/osrf/haptix_api/commits/4e6bea4bd35f\" rel=\"nofollow\" class=\"ap-connect-link\">4e6bea4bd35f</a>), I have made the following changes:</p>\n<ul>\n<li>removed the IMU_orientation field from hxSensor</li>\n<li>added additional description of the <code>IMU_linacc</code> and <code>IMU_angvel</code> fields</li>\n<li>added units for the motor gains</li>\n</ul>", "type": "rendered"}, "created_on": "2015-02-06T22:33:36.442651+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-06T22:33:36.450268+00:00", "type": "pullrequest_comment", "id": 5020607}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020740.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020740"}}, "parent": {"id": 5020607, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020607.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020607"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Please hold off on removal, let me check our previous meeting notes first.  It may have been a decision we made as a group back then.", "markup": "markdown", "html": "<p>Please hold off on removal, let me check our previous meeting notes first.  It may have been a decision we made as a group back then.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:48:22.507817+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-02-06T22:48:22.521976+00:00", "type": "pullrequest_comment", "id": 5020740}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023927.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023927"}}, "parent": {"id": 5020740, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020740.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020740"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "In my notes, we decided to add the orientation field when we had our initial API discussion with DARPA, APL and Deka. I don't remember how much depth we went into it during the discussion, but the field seems like a good idea.\n\nWhile most small imu's don't provide orientation, some have interal Kalman filters and provide orientation with corresponding covariances. I think we might have decided to add it for 2 reasons: 1) in case an IMU with orientation is selected, 2) it's a more generic imu message header (see for example [the BDI Atlas header for IMU](https://bitbucket.org/osrf/drcsim/src/39750ee2616fcb872e78cbe417ef54f5a79cfd01/drcsim_model_resources/AtlasSimInterface_3.0.2/include/AtlasSimInterface_3.0.2/AtlasControlTypes.h?at=default#cl-1331) and [the PR2 IMU header](http://docs.ros.org/indigo/api/sensor_msgs/html/msg/Imu.html) is even more complete).\n\nThat said, if both the hardware teams have already picked a hardware IMU unit without such capability, let's remove it.\n\ntagging @kapil_katyal for comments.\n\nThanks.", "markup": "markdown", "html": "<p>In my notes, we decided to add the orientation field when we had our initial API discussion with DARPA, APL and Deka. I don't remember how much depth we went into it during the discussion, but the field seems like a good idea.</p>\n<p>While most small imu's don't provide orientation, some have interal Kalman filters and provide orientation with corresponding covariances. I think we might have decided to add it for 2 reasons: 1) in case an IMU with orientation is selected, 2) it's a more generic imu message header (see for example <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/drcsim/src/39750ee2616fcb872e78cbe417ef54f5a79cfd01/drcsim_model_resources/AtlasSimInterface_3.0.2/include/AtlasSimInterface_3.0.2/AtlasControlTypes.h?at=default#cl-1331\" rel=\"nofollow\">the BDI Atlas header for IMU</a> and <a data-is-external-link=\"true\" href=\"http://docs.ros.org/indigo/api/sensor_msgs/html/msg/Imu.html\" rel=\"nofollow\">the PR2 IMU header</a> is even more complete).</p>\n<p>That said, if both the hardware teams have already picked a hardware IMU unit without such capability, let's remove it.</p>\n<p>tagging @kapil_katyal for comments.</p>\n<p>Thanks.</p>", "type": "rendered"}, "created_on": "2015-02-07T22:13:46.177213+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-02-07T22:14:06.760141+00:00", "type": "pullrequest_comment", "id": 5023927}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023976.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023976"}}, "parent": {"id": 5023927, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023927.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023927"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Right, we need to understand if the hardware provides an orientation estimate or not.  If it doesn't and the simulators make it available, user code that relies on it would be a major cheat.  Since we are finalizing API 1.0 now, lets leave orientation out and add it later if we get confirmation that it is provided by the hardware.\n\nWe still need to design a future world API btw, and it will most likely provide the positions and orientations of all bodies, including the IMUs. But in that case it will be clearly labeled as a debugging aid.\n\nOn a related note:  do you have an analytical solution for the IMU output or is it based on finite-differencing?  Mujoco now does all computations in continuous time (no more velocity-stepping solvers!), so the IMUs are modeled analytically.", "markup": "markdown", "html": "<p>Right, we need to understand if the hardware provides an orientation estimate or not.  If it doesn't and the simulators make it available, user code that relies on it would be a major cheat.  Since we are finalizing API 1.0 now, lets leave orientation out and add it later if we get confirmation that it is provided by the hardware.</p>\n<p>We still need to design a future world API btw, and it will most likely provide the positions and orientations of all bodies, including the IMUs. But in that case it will be clearly labeled as a debugging aid.</p>\n<p>On a related note:  do you have an analytical solution for the IMU output or is it based on finite-differencing?  Mujoco now does all computations in continuous time (no more velocity-stepping solvers!), so the IMUs are modeled analytically.</p>", "type": "rendered"}, "created_on": "2015-02-07T22:50:23.595642+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T22:50:23.603112+00:00", "type": "pullrequest_comment", "id": 5023976}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026385.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026385"}}, "parent": {"id": 5023976, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023976.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023976"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "the ImuSensor is currently doing finite differencing, but there's a [pending issue and pull request](https://bitbucket.org/osrf/gazebo/issue/893/imusensor-should-get-acceleration-directly) to make it pull analytical data from physics engine.", "markup": "markdown", "html": "<p>the ImuSensor is currently doing finite differencing, but there's a <a data-is-external-link=\"true\" href=\"https://bitbucket.org/osrf/gazebo/issue/893/imusensor-should-get-acceleration-directly\" rel=\"nofollow\">pending issue and pull request</a> to make it pull analytical data from physics engine.</p>", "type": "rendered"}, "created_on": "2015-02-08T22:09:52.989643+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-02-08T22:09:52.999519+00:00", "type": "pullrequest_comment", "id": 5026385}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026414.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026414"}}, "parent": {"id": 5023976, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023976.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023976"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "probably part of telecon discussion from before, but I liked the idea of having the fields and leaving them empty for now, since adding new fields later will break API/ABI.\n\n@emotodorov by `future world API`, do you mean something like pull request #4 for simulation only?", "markup": "markdown", "html": "<p>probably part of telecon discussion from before, but I liked the idea of having the fields and leaving them empty for now, since adding new fields later will break API/ABI.</p>\n<p>@emotodorov by <code>future world API</code>, do you mean something like <a href=\"#!/osrf/haptix_api/pull-requests/4/update-to-the-simulation-api\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #4</a> for simulation only?</p>", "type": "rendered"}, "created_on": "2015-02-08T22:16:16.153722+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-02-09T22:58:22.309018+00:00", "type": "pullrequest_comment", "id": 5026414}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5042051.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5042051"}}, "parent": {"id": 5026414, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026414.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026414"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Done.", "markup": "markdown", "html": "<p>Done.</p>", "type": "rendered"}, "created_on": "2015-02-09T17:57:18.995093+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-09T17:57:19.004132+00:00", "type": "pullrequest_comment", "id": 5042051}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020856.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020856"}}, "parent": {"id": 5020607, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020607.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020607"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I don't think we know what the motor units are.  The motors of course rotate, but due to the large gear ratio they rotate much faster than the joints, so the robot will not return the actual rotation angle of the motor.  And they are not in one-to-one correspondence with the joints due to the elaborate coupling...  so it will be confusing to tell people that the motor units are radians.", "markup": "markdown", "html": "<p>I don't think we know what the motor units are.  The motors of course rotate, but due to the large gear ratio they rotate much faster than the joints, so the robot will not return the actual rotation angle of the motor.  And they are not in one-to-one correspondence with the joints due to the elaborate coupling...  so it will be confusing to tell people that the motor units are radians.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:59:07.641193+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-06T22:59:07.657394+00:00", "type": "pullrequest_comment", "id": 5020856}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022029.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022029"}}, "parent": {"id": 5020856, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020856.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020856"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I am happy prescribing motor units to be \"encoder ticks\".\n\n@emotodorov,\n\nTo clarify, are you referring to [motor_pos](#!/osrf/haptix_api/src/e3882d526a37714bc1216a0e582a74d8810627d2/haptix.h?at=match_api#cl-143) and [motor_vel](#!/osrf/haptix_api/src/e3882d526a37714bc1216a0e582a74d8810627d2/haptix.h?at=match_api#cl-153)?\n\nAlthough we can also assume that the motor driver converts `motor_pos` or `motor_vel` encoder position and rates to radians and rad/sec. Keeping them as Radians seem much intuitive...", "markup": "markdown", "html": "<p>I am happy prescribing motor units to be \"encoder ticks\".</p>\n<p>@emotodorov,</p>\n<p>To clarify, are you referring to <a data-is-external-link=\"true\" href=\"#!/osrf/haptix_api/src/e3882d526a37714bc1216a0e582a74d8810627d2/haptix.h?at=match_api#cl-143\" rel=\"nofollow\">motor_pos</a> and <a data-is-external-link=\"true\" href=\"#!/osrf/haptix_api/src/e3882d526a37714bc1216a0e582a74d8810627d2/haptix.h?at=match_api#cl-153\" rel=\"nofollow\">motor_vel</a>?</p>\n<p>Although we can also assume that the motor driver converts <code>motor_pos</code> or <code>motor_vel</code> encoder position and rates to radians and rad/sec. Keeping them as Radians seem much intuitive...</p>", "type": "rendered"}, "created_on": "2015-02-07T02:25:52.180544+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-02-09T23:03:26.142790+00:00", "type": "pullrequest_comment", "id": 5022029}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020392.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:71e430d9486a..51d2158fed2d?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020392"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Do we want `HAPTIX_COMM` in the header guards?", "markup": "markdown", "html": "<p>Do we want <code>HAPTIX_COMM</code> in the header guards?</p>", "type": "rendered"}, "created_on": "2015-02-06T22:16:27.880006+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 13, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T22:16:27.890856+00:00", "type": "pullrequest_comment", "id": 5020392}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020528.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020528"}}, "parent": {"id": 5020392, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020392.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020392"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Changed to `__HAPTIX_API_HAPTIX_H__`", "markup": "markdown", "html": "<p>Changed to <code>__HAPTIX_API_HAPTIX_H__</code></p>", "type": "rendered"}, "created_on": "2015-02-06T22:27:09.413139+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-06T22:27:09.423997+00:00", "type": "pullrequest_comment", "id": 5020528}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020486.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020486"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "* timestamp now only exists in hxSensor. I've removed it from the hx_readsensors and hx_update functions, and the hxCommand struct.\n\n* There are now two hx_connect functions.\n", "markup": "markdown", "html": "<ul>\n<li>\n<p>timestamp now only exists in hxSensor. I've removed it from the hx_readsensors and hx_update functions, and the hxCommand struct.</p>\n</li>\n<li>\n<p>There are now two hx_connect functions.</p>\n</li>\n</ul>", "type": "rendered"}, "created_on": "2015-02-06T22:24:39.618700+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T22:24:39.627889+00:00", "type": "pullrequest_comment", "id": 5020486}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020513.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020513"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": ">  motivation for including nano-seconds is to match the Unix ...\n\nThat is exactly my problem with it.  We are simulating a robot, not the Unix operating system.  Why would the user care how Unix works?  The users are biomedical engineers who mostly use Windows anyway.  And, when they eventually connect their code to a physical robot rather than a simulator, the robot will not provide a nanosecond timer.", "markup": "markdown", "html": "<blockquote>\n<p>motivation for including nano-seconds is to match the Unix ...</p>\n</blockquote>\n<p>That is exactly my problem with it.  We are simulating a robot, not the Unix operating system.  Why would the user care how Unix works?  The users are biomedical engineers who mostly use Windows anyway.  And, when they eventually connect their code to a physical robot rather than a simulator, the robot will not provide a nanosecond timer.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:26:00.137211+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-06T22:26:00.147078+00:00", "type": "pullrequest_comment", "id": 5020513}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020609.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020609"}}, "parent": {"id": 5020513, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020513.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020513"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "It's not just UNIX; Windows also gives you the system time in a pair of integers.  That's the least ambiguous, highest-precision, most portable way to represent time.  At present, I don't know how (or if) the robot limb will represent or return time information to the user.  In the absence of that information, we should follow the broadly accepted standard of representing time as a pair of integers.\n\nYou could propose adding a helper function to convert the time structure to a double.", "markup": "markdown", "html": "<p>It's not just UNIX; Windows also gives you the system time in a pair of integers.  That's the least ambiguous, highest-precision, most portable way to represent time.  At present, I don't know how (or if) the robot limb will represent or return time information to the user.  In the absence of that information, we should follow the broadly accepted standard of representing time as a pair of integers.</p>\n<p>You could propose adding a helper function to convert the time structure to a double.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:33:48.353593+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-02-06T22:33:48.370071+00:00", "type": "pullrequest_comment", "id": 5020609}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020666.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020666"}}, "parent": {"id": 5020513, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020513.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020513"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "We use a structure of this nature because the linux community, through years of trial, error, and experience, has determined it to be the best way to represent time. This structure does not mean simulation == linux. It conveniently encapsulates time that does not loose precision and is also self-explanatory. This structure happens to match what people get of of system clocks, which makes it very convenient to switch between hardware and simulation.\n\nA double representation, on the other hand, is only used in the internals of a simulation engine. Users should not be exposed to this because it is ambiguous, less precise, and does not match a standard.\n\nThe only compelling reason to use a double is because it's easier to implement. I don't think we should take short-cuts, and we should not ignore the overwhelming majority of systems that use sec/nsec type structure. ", "markup": "markdown", "html": "<p>We use a structure of this nature because the linux community, through years of trial, error, and experience, has determined it to be the best way to represent time. This structure does not mean simulation == linux. It conveniently encapsulates time that does not loose precision and is also self-explanatory. This structure happens to match what people get of of system clocks, which makes it very convenient to switch between hardware and simulation.</p>\n<p>A double representation, on the other hand, is only used in the internals of a simulation engine. Users should not be exposed to this because it is ambiguous, less precise, and does not match a standard.</p>\n<p>The only compelling reason to use a double is because it's easier to implement. I don't think we should take short-cuts, and we should not ignore the overwhelming majority of systems that use sec/nsec type structure. </p>", "type": "rendered"}, "created_on": "2015-02-06T22:40:11.783569+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T22:40:11.796032+00:00", "type": "pullrequest_comment", "id": 5020666}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020770.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020770"}}, "parent": {"id": 5020666, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020666.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020666"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Physics is a couple of thousand years older than the Linux community - check with John :)\n\nImplementation convenience is irrelevant; of course anyone can convert back and forth.  However the only component of the system that knows the time is the simulation engine (and eventually the robot).  So this information should be passed to the user directly.\n\nIncidentally, the reason I care about this is because I actually work in this field and go to the same conferences as the users of this system, and I don't want them to think that we are yet another bunch of developers who neither know nor care what the users think.", "markup": "markdown", "html": "<p>Physics is a couple of thousand years older than the Linux community - check with John :)</p>\n<p>Implementation convenience is irrelevant; of course anyone can convert back and forth.  However the only component of the system that knows the time is the simulation engine (and eventually the robot).  So this information should be passed to the user directly.</p>\n<p>Incidentally, the reason I care about this is because I actually work in this field and go to the same conferences as the users of this system, and I don't want them to think that we are yet another bunch of developers who neither know nor care what the users think.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:52:25.289942+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-06T22:52:25.299130+00:00", "type": "pullrequest_comment", "id": 5020770}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020965.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020965"}}, "parent": {"id": 5020770, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020770.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020770"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I think we have reached the end of this particular discussion.\n\nThe majority of people want the structure, so we will use the structure.", "markup": "markdown", "html": "<p>I think we have reached the end of this particular discussion.</p>\n<p>The majority of people want the structure, so we will use the structure.</p>", "type": "rendered"}, "created_on": "2015-02-06T23:08:42.180242+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T23:08:42.189966+00:00", "type": "pullrequest_comment", "id": 5020965}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020514.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020514"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I also updated the error codes.", "markup": "markdown", "html": "<p>I also updated the error codes.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:26:00.729706+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-06T22:26:00.740557+00:00", "type": "pullrequest_comment", "id": 5020514}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5020673.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5020673"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "True, we don't know how the robot works and we should clarify it.  But we do know how the underlying physics engines work and how they represent time.  Have you seen a nanosecond timer in ODE, Bullet or DART?  If the engine itself represent time as a single scalar and uses it for numerical integration, we cannot gain resolution by converting it to sec/nsec and pretending that it came from a system timer... I would agree with you if the timestamp was system time rather than simulation time, but I think we already established that it is simulation time.\n", "markup": "markdown", "html": "<p>True, we don't know how the robot works and we should clarify it.  But we do know how the underlying physics engines work and how they represent time.  Have you seen a nanosecond timer in ODE, Bullet or DART?  If the engine itself represent time as a single scalar and uses it for numerical integration, we cannot gain resolution by converting it to sec/nsec and pretending that it came from a system timer... I would agree with you if the timestamp was system time rather than simulation time, but I think we already established that it is simulation time.</p>", "type": "rendered"}, "created_on": "2015-02-06T22:40:56.067358+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-06T22:40:56.080089+00:00", "type": "pullrequest_comment", "id": 5020673}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021053.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021053"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Are there any outstanding issues, problems, or concerns?", "markup": "markdown", "html": "<p>Are there any outstanding issues, problems, or concerns?</p>", "type": "rendered"}, "created_on": "2015-02-06T23:17:39.387787+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-06T23:17:39.398877+00:00", "type": "pullrequest_comment", "id": 5021053}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021077.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021077"}}, "parent": {"id": 5021053, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021053.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021053"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "It looks good to me.", "markup": "markdown", "html": "<p>It looks good to me.</p>", "type": "rendered"}, "created_on": "2015-02-06T23:19:28.521895+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-06T23:19:28.531304+00:00", "type": "pullrequest_comment", "id": 5021077}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021755.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021755"}}, "parent": {"id": 5021053, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021053.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021053"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Trying to compile a simple `.c` file that includes this header produced two errors, which are called out in the comments below.", "markup": "markdown", "html": "<p>Trying to compile a simple <code>.c</code> file that includes this header produced two errors, which are called out in the comments below.</p>", "type": "rendered"}, "created_on": "2015-02-07T01:06:21.152518+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-02-07T01:06:21.160706+00:00", "type": "pullrequest_comment", "id": 5021755}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021789.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021789"}}, "parent": {"id": 5021755, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021755.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021755"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Compiles cleanly now.", "markup": "markdown", "html": "<p>Compiles cleanly now.</p>", "type": "rendered"}, "created_on": "2015-02-07T01:14:43.899848+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-02-07T01:14:43.908527+00:00", "type": "pullrequest_comment", "id": 5021789}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021743.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:4e6bea4bd35f..51d2158fed2d?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021743"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "This `typedef` needs to appear prior to the use of `hxTime` in the declaration of `struct _hxSensor`.", "markup": "markdown", "html": "<p>This <code>typedef</code> needs to appear prior to the use of <code>hxTime</code> in the declaration of <code>struct _hxSensor</code>.</p>", "type": "rendered"}, "created_on": "2015-02-07T01:03:44.420858+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "inline": {"to": 260, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-07T01:03:44.429297+00:00", "type": "pullrequest_comment", "id": 5021743}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021771.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021771"}}, "parent": {"id": 5021743, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021743.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021743"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Done.", "markup": "markdown", "html": "<p>Done.</p>", "type": "rendered"}, "created_on": "2015-02-07T01:08:32.554590+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-07T01:08:32.561703+00:00", "type": "pullrequest_comment", "id": 5021771}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021747.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:4e6bea4bd35f..51d2158fed2d?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021747"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Re-declaring `hx_connect()` with a different signature is not valid C; that kind of overloading is a C++-ism.", "markup": "markdown", "html": "<p>Re-declaring <code>hx_connect()</code> with a different signature is not valid C; that kind of overloading is a C++-ism.</p>", "type": "rendered"}, "created_on": "2015-02-07T01:04:49.813151+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "inline": {"to": 298, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-07T01:04:49.822361+00:00", "type": "pullrequest_comment", "id": 5021747}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021761.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021761"}}, "parent": {"id": 5021747, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5021747.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5021747"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Done: `hx_connect` and `hx_connect_host`", "markup": "markdown", "html": "<p>Done: <code>hx_connect</code> and <code>hx_connect_host</code></p>", "type": "rendered"}, "created_on": "2015-02-07T01:07:37.793544+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-07T01:07:37.803294+00:00", "type": "pullrequest_comment", "id": 5021761}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022102.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022102"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "haptix.h now looks good (except for the timing of course, but since you are so attached to it, fine).\n\n\"#pragma once\" does the same thing as the include guards btw.\n\nthe only outstanding issue is whether we want to keep the unused \"target\" argument or delete it everywhere -- see comment I posted in reply to Brian in the MATLAB thread.  my preference is to delete it.  having written some user-side code already, this argument is just annoying.", "markup": "markdown", "html": "<p>haptix.h now looks good (except for the timing of course, but since you are so attached to it, fine).</p>\n<p>\"#pragma once\" does the same thing as the include guards btw.</p>\n<p>the only outstanding issue is whether we want to keep the unused \"target\" argument or delete it everywhere -- see comment I posted in reply to Brian in the MATLAB thread.  my preference is to delete it.  having written some user-side code already, this argument is just annoying.</p>", "type": "rendered"}, "created_on": "2015-02-07T03:04:05.078968+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T03:04:05.088971+00:00", "type": "pullrequest_comment", "id": 5022102}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023050.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023050"}}, "parent": {"id": 5022102, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022102.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022102"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "#pragma removed.\n\nThe haptix.h API is suppose to work with hardware as well. Are we assuming that teams will have to recompile their code in order to switch from simulation to hardware?", "markup": "markdown", "html": "<p>#pragma removed.</p>\n<p>The haptix.h API is suppose to work with hardware as well. Are we assuming that teams will have to recompile their code in order to switch from simulation to hardware?</p>", "type": "rendered"}, "created_on": "2015-02-07T15:36:16.298929+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-07T15:36:16.310515+00:00", "type": "pullrequest_comment", "id": 5023050}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023823.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023823"}}, "parent": {"id": 5023050, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023050.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023050"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "The way we are presently doing things they have to recompile anyway.  If they attempt to link two communication libraries implementing the same function, the linker will complain.  The idea behind the \"target\" argument was to later add a small dispatch library which does this for every API call:\n\n```\n#!c\nhxResult hx_update(int target, const hxCommand* command, hxSensor* sensor)\n{\n  if( target==hxMPL )\n    return mpl_update(command, sensor);\n  else if( target==hxMUJOCO )\n    return mj_update(command, sensor);\n  // and so on\n}\n```\n\nThe simulator/device-specific communication libraries will have to be modified to implement functions with unique prefixes, and then everything can be linked together - allowing users to switch the target at runtime.\n\nHowever, this future dispatch library could just as easily store a global target variable, instead of requiring every API call to provide it.  We just need to add a function hx_settarget(int).", "markup": "markdown", "html": "<p>The way we are presently doing things they have to recompile anyway.  If they attempt to link two communication libraries implementing the same function, the linker will complain.  The idea behind the \"target\" argument was to later add a small dispatch library which does this for every API call:</p>\n<div class=\"codehilite language-c\"><pre><span></span><span class=\"n\">hxResult</span> <span class=\"nf\">hx_update</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"n\">hxCommand</span><span class=\"o\">*</span> <span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">hxSensor</span><span class=\"o\">*</span> <span class=\"n\">sensor</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"n\">target</span><span class=\"o\">==</span><span class=\"n\">hxMPL</span> <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">mpl_update</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">sensor</span><span class=\"p\">);</span>\n  <span class=\"k\">else</span> <span class=\"k\">if</span><span class=\"p\">(</span> <span class=\"n\">target</span><span class=\"o\">==</span><span class=\"n\">hxMUJOCO</span> <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">mj_update</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"p\">,</span> <span class=\"n\">sensor</span><span class=\"p\">);</span>\n  <span class=\"c1\">// and so on</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>The simulator/device-specific communication libraries will have to be modified to implement functions with unique prefixes, and then everything can be linked together - allowing users to switch the target at runtime.</p>\n<p>However, this future dispatch library could just as easily store a global target variable, instead of requiring every API call to provide it.  We just need to add a function hx_settarget(int).</p>", "type": "rendered"}, "created_on": "2015-02-07T21:36:29.459455+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T21:37:27.192775+00:00", "type": "pullrequest_comment", "id": 5023823}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5025646.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5025646"}}, "parent": {"id": 5023823, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023823.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023823"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I'm good with removing the `target` argument throughout the API.\n\nThe far better path to portability is to agree on a transport-level API (e.g., a UDP protocol).  Then a user's program, written in any language, can be directed at any simulator or hardware without modification or recompilation, perhaps configuring host/port information (via command-line argument or environment variable).  But that ship sailed when we settled for a higher-level, language-specific API in C.\n\nGiven the constraint of working with a C API, we should assume that users will have to recompile their code when switching among the various simulators or hardware, and that each system will come with its own library that implements this API.  In that case, the `target` argument doesn't add functionality.  If anything, the information should flow the other direction: the API would return a `target` value to the user (e.g., from `hx_connect()`), informing her of which system is being controlled, in case she wants to do something that is specific to that system.\n\nAs @emotodorov suggests, we could later build a dispatch library to combine the systems, using a global switch or new function to select it.  That would provide run-time switching, but at the cost of requiring the ability to link together all the library implementations (exactly the kind of problem that a transport API avoids by decoupling different implementations of that API).", "markup": "markdown", "html": "<p>I'm good with removing the <code>target</code> argument throughout the API.</p>\n<p>The far better path to portability is to agree on a transport-level API (e.g., a UDP protocol).  Then a user's program, written in any language, can be directed at any simulator or hardware without modification or recompilation, perhaps configuring host/port information (via command-line argument or environment variable).  But that ship sailed when we settled for a higher-level, language-specific API in C.</p>\n<p>Given the constraint of working with a C API, we should assume that users will have to recompile their code when switching among the various simulators or hardware, and that each system will come with its own library that implements this API.  In that case, the <code>target</code> argument doesn't add functionality.  If anything, the information should flow the other direction: the API would return a <code>target</code> value to the user (e.g., from <code>hx_connect()</code>), informing her of which system is being controlled, in case she wants to do something that is specific to that system.</p>\n<p>As @emotodorov suggests, we could later build a dispatch library to combine the systems, using a global switch or new function to select it.  That would provide run-time switching, but at the cost of requiring the ability to link together all the library implementations (exactly the kind of problem that a transport API avoids by decoupling different implementations of that API).</p>", "type": "rendered"}, "created_on": "2015-02-08T18:04:42.754898+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-02-08T18:04:42.825295+00:00", "type": "pullrequest_comment", "id": 5025646}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5025678.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5025678"}}, "parent": {"id": 5025646, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5025646.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5025646"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I thought the original idea was to support the chunk of code that emo posted above. Users wouldn't have recompile code, and could even control both a real and simulated limb at the same time. Might be feature overkill. But I wanted to raise the point before discarding the the notion all together. Version 1 of the API wouldn't have to support this, but a future version could. ", "markup": "markdown", "html": "<p>I thought the original idea was to support the chunk of code that emo posted above. Users wouldn't have recompile code, and could even control both a real and simulated limb at the same time. Might be feature overkill. But I wanted to raise the point before discarding the the notion all together. Version 1 of the API wouldn't have to support this, but a future version could. </p>", "type": "rendered"}, "created_on": "2015-02-08T18:28:15.206568+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-08T18:28:15.213941+00:00", "type": "pullrequest_comment", "id": 5025678}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5025754.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5025754"}}, "parent": {"id": 5025678, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5025678.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5025678"}}, "depth": 5}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I'll be surprised if anybody actually controls two systems (simulators and/or hardware) at the same time, except perhaps for validation of the simulation itself.  I'll also be surprised if we actually end up producing the Frankenstein dispatch library that contains all the implementations.\n\nBut, for a bit of future-proofing, how about we leave the `target` argument in just the `hx_connect()` call?  A system-specific implementation could ignore it, while a dispatch library could store it for later use.", "markup": "markdown", "html": "<p>I'll be surprised if anybody actually controls two systems (simulators and/or hardware) at the same time, except perhaps for validation of the simulation itself.  I'll also be surprised if we actually end up producing the Frankenstein dispatch library that contains all the implementations.</p>\n<p>But, for a bit of future-proofing, how about we leave the <code>target</code> argument in just the <code>hx_connect()</code> call?  A system-specific implementation could ignore it, while a dispatch library could store it for later use.</p>", "type": "rendered"}, "created_on": "2015-02-08T19:01:20.292211+00:00", "user": {"display_name": "Brian Gerkey", "uuid": "{3d8b5763-9dad-4be7-85c2-a7ab6cd49173}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D"}, "html": {"href": "https://bitbucket.org/%7B3d8b5763-9dad-4be7-85c2-a7ab6cd49173%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9/5fa9ec73-0fec-4860-a202-e34ae23b6a12/128"}}, "nickname": "Brian Gerkey", "type": "user", "account_id": "557058:2e35028e-9ad8-4d6a-a3a5-275159a304a9"}, "updated_on": "2015-02-08T19:01:20.300491+00:00", "type": "pullrequest_comment", "id": 5025754}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026493.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026493"}}, "parent": {"id": 5025754, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5025754.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5025754"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "We could leave target in hx_connect, but does it imply that once you connect to a given target all subsequent calls go there?  What happens if you connect to a second target from the same code?\n\nThere is another limitation of the present target mechanism actually.  We have settings for MPL, DEKA, GAZEBO, MUJOCO.  But how do we distinguish Gazebo simulating MPL, vs. Mujoco simulating MPL, vs talking to the actual MPL hardware?  We probably need to have separate RobotType (DEKA, MPL, other robots) and EnvironmentType (Gazebo sim, Mujoco sim, actual hardware)...\n\nI think the bottom line is that we just don't know at this point -- no matter what we do now, this kind of future functionality will require some API change that will affect existing code.  If you prefer to keep the target as reserved parameter that is fine with me, although my preference is still to remove it altogether.", "markup": "markdown", "html": "<p>We could leave target in hx_connect, but does it imply that once you connect to a given target all subsequent calls go there?  What happens if you connect to a second target from the same code?</p>\n<p>There is another limitation of the present target mechanism actually.  We have settings for MPL, DEKA, GAZEBO, MUJOCO.  But how do we distinguish Gazebo simulating MPL, vs. Mujoco simulating MPL, vs talking to the actual MPL hardware?  We probably need to have separate RobotType (DEKA, MPL, other robots) and EnvironmentType (Gazebo sim, Mujoco sim, actual hardware)...</p>\n<p>I think the bottom line is that we just don't know at this point -- no matter what we do now, this kind of future functionality will require some API change that will affect existing code.  If you prefer to keep the target as reserved parameter that is fine with me, although my preference is still to remove it altogether.</p>", "type": "rendered"}, "created_on": "2015-02-08T22:38:49.176239+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-08T22:38:49.185568+00:00", "type": "pullrequest_comment", "id": 5026493}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026679.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026679"}}, "parent": {"id": 5025754, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5025754.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5025754"}}, "depth": 6}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Sounds like the target variable is feature creep. I'll remove it shortly.", "markup": "markdown", "html": "<p>Sounds like the target variable is feature creep. I'll remove it shortly.</p>", "type": "rendered"}, "created_on": "2015-02-08T23:36:41.276794+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-08T23:36:41.288361+00:00", "type": "pullrequest_comment", "id": 5026679}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022109.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022109"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "do we need both hx_connect and hx_connect_host?  We could pass NULL as the host argument if we want localhost or unspecified host (not even sure what the latter means).\n\nis it true that Gazebo does not use either of those functions (this is what the comments say)", "markup": "markdown", "html": "<p>do we need both hx_connect and hx_connect_host?  We could pass NULL as the host argument if we want localhost or unspecified host (not even sure what the latter means).</p>\n<p>is it true that Gazebo does not use either of those functions (this is what the comments say)</p>", "type": "rendered"}, "created_on": "2015-02-07T03:08:59.266149+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T03:08:59.275061+00:00", "type": "pullrequest_comment", "id": 5022109}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5023047.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5023047"}}, "parent": {"id": 5022109, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5022109.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5022109"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Removed `hx_connect_host`, and updated documentation.", "markup": "markdown", "html": "<p>Removed <code>hx_connect_host</code>, and updated documentation.</p>", "type": "rendered"}, "created_on": "2015-02-07T15:34:52.616708+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-07T15:34:52.627365+00:00", "type": "pullrequest_comment", "id": 5023047}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026710.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026710"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Stylistic point: we have underscore in motor_pos etc in hxSensor, but no underscore in jointlimits in hxRobotInfo.  Also, limits is plural while the names of the other vector quantities are not.  I suggest using joint_limit and motor_limit for consistency.\n\nupdateRate should be updaterate (no capitalization).  The convention being that XXX_YYY is used when the same XXX has multiple YYYs, while XXXYYY is used when XXX and YYY form a phrase in English.\n\nBut then, why do we have motor_count etc?  It should be count_motor.  And joint_limit should be limit_joint.\n\nAnd gain_vel_enabled should be enable_gain_vel.\n\nSo hard to be consistent!", "markup": "markdown", "html": "<p>Stylistic point: we have underscore in motor_pos etc in hxSensor, but no underscore in jointlimits in hxRobotInfo.  Also, limits is plural while the names of the other vector quantities are not.  I suggest using joint_limit and motor_limit for consistency.</p>\n<p>updateRate should be updaterate (no capitalization).  The convention being that XXX_YYY is used when the same XXX has multiple YYYs, while XXXYYY is used when XXX and YYY form a phrase in English.</p>\n<p>But then, why do we have motor_count etc?  It should be count_motor.  And joint_limit should be limit_joint.</p>\n<p>And gain_vel_enabled should be enable_gain_vel.</p>\n<p>So hard to be consistent!</p>", "type": "rendered"}, "created_on": "2015-02-08T23:48:16.937583+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-09T00:28:30.414284+00:00", "type": "pullrequest_comment", "id": 5026710}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5040462.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5040462"}}, "parent": {"id": 5026710, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026710.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026710"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I removed the plurals, and added a few underscore.\n\nI like the notion of XXX_YYY where XXX is the noun and YYY is the modifier.", "markup": "markdown", "html": "<p>I removed the plurals, and added a few underscore.</p>\n<p>I like the notion of XXX_YYY where XXX is the noun and YYY is the modifier.</p>", "type": "rendered"}, "created_on": "2015-02-09T16:50:48.364071+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-09T16:50:48.374111+00:00", "type": "pullrequest_comment", "id": 5040462}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5047448.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5047448"}}, "parent": {"id": 5040462, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5040462.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5040462"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "@hsu brought up a point that I'll record here: what about underscores in function names, and for that matter, names of structs? The struct names are camel cased right now (`hxRobotInfo`) while the function names are lowercase with no underscores (`hx_robotinfo`). Neither of these conventions are consistent with the scheme for struct member names... I think that function names and member names at least should have the same underscore/capitalization scheme.", "markup": "markdown", "html": "<p>@hsu brought up a point that I'll record here: what about underscores in function names, and for that matter, names of structs? The struct names are camel cased right now (<code>hxRobotInfo</code>) while the function names are lowercase with no underscores (<code>hx_robotinfo</code>). Neither of these conventions are consistent with the scheme for struct member names... I think that function names and member names at least should have the same underscore/capitalization scheme.</p>", "type": "rendered"}, "created_on": "2015-02-09T22:36:24.812193+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-09T22:36:24.825465+00:00", "type": "pullrequest_comment", "id": 5047448}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048523.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048523"}}, "parent": {"id": 5047448, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5047448.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5047448"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "How about we leave the structures as camel-case so that they don't conflict with function names( hxRobotInfo and hx_robot_info). \n\nI added underscores to the functions.", "markup": "markdown", "html": "<p>How about we leave the structures as camel-case so that they don't conflict with function names( hxRobotInfo and hx_robot_info). </p>\n<p>I added underscores to the functions.</p>", "type": "rendered"}, "created_on": "2015-02-09T23:49:28.262026+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-09T23:49:28.277965+00:00", "type": "pullrequest_comment", "id": 5048523}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048549.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048549"}}, "parent": {"id": 5048523, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048523.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048523"}}, "depth": 4}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I agree; looks good.", "markup": "markdown", "html": "<p>I agree; looks good.</p>", "type": "rendered"}, "created_on": "2015-02-09T23:51:41.938404+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-09T23:51:41.948037+00:00", "type": "pullrequest_comment", "id": 5048549}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5047767.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5047767"}}, "parent": {"id": 5026710, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5026710.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5026710"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I like it as well c5de8e1", "markup": "markdown", "html": "<p>I like it as well <a href=\"#!/osrf/haptix_api/commits/c5de8e1\" rel=\"nofollow\" class=\"ap-connect-link\">c5de8e1</a></p>", "type": "rendered"}, "created_on": "2015-02-09T22:55:50.444402+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-02-09T22:55:50.453498+00:00", "type": "pullrequest_comment", "id": 5047767}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5072054.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5072054"}}, "parent": {"id": 5047767, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5047767.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5047767"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "pull request #6?", "markup": "markdown", "html": "<p><a href=\"#!/osrf/haptix_api/pull-requests/6/stylistc-limit-count-reverted\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #6</a>?</p>", "type": "rendered"}, "created_on": "2015-02-10T21:46:47.353445+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "updated_on": "2015-02-10T21:46:47.361328+00:00", "type": "pullrequest_comment", "id": 5072054}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5072542.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5072542"}}, "parent": {"id": 5072054, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5072054.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5072054"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "At this point, I don't think it's worth it to make this change. Our haptix-comm library has already been updated to the current API.\n\nThe notation is also more useful for functions, where you want to count the number of motors. ", "markup": "markdown", "html": "<p>At this point, I don't think it's worth it to make this change. Our haptix-comm library has already been updated to the current API.</p>\n<p>The notation is also more useful for functions, where you want to count the number of motors. </p>", "type": "rendered"}, "created_on": "2015-02-10T22:14:01.355519+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-10T22:14:01.363341+00:00", "type": "pullrequest_comment", "id": 5072542}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5041837.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:80775aabf126..51d2158fed2d?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5041837"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "If this is meant to return the result of the last hx_update (or hx_readsensors), shouldn't it return an hxResult enum, not a char*?", "markup": "markdown", "html": "<p>If this is meant to return the result of the last hx_update (or hx_readsensors), shouldn't it return an hxResult enum, not a char*?</p>", "type": "rendered"}, "created_on": "2015-02-09T17:46:42.841133+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": 329, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-09T17:47:25.139101+00:00", "type": "pullrequest_comment", "id": 5041837}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5041949.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5041949"}}, "parent": {"id": 5041837, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5041837.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5041837"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "This will be used to return a string that describes the last result from a function.", "markup": "markdown", "html": "<p>This will be used to return a string that describes the last result from a function.</p>", "type": "rendered"}, "created_on": "2015-02-09T17:51:29.325140+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-09T17:51:29.335392+00:00", "type": "pullrequest_comment", "id": 5041949}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5042159.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:e3882d526a37..51d2158fed2d?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5042159"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Is this function meant simply for debugging purposes, or is the developer supposed to parse relevant information from it? If it's the latter case, then we probably need to agree upon the format/contents of the return string with @emotodorov before our implementations start to diverge. Alternatively, if we allow for different environments to implement this in whatever way we desire, we should note that in this documentation.", "markup": "markdown", "html": "<p>Is this function meant simply for debugging purposes, or is the developer supposed to parse relevant information from it? If it's the latter case, then we probably need to agree upon the format/contents of the return string with @emotodorov before our implementations start to diverge. Alternatively, if we allow for different environments to implement this in whatever way we desire, we should note that in this documentation.</p>", "type": "rendered"}, "created_on": "2015-02-09T18:02:41.385076+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": 335, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-09T18:02:41.424979+00:00", "type": "pullrequest_comment", "id": 5042159}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5047216.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5047216"}}, "parent": {"id": 5042159, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5042159.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5042159"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "It is for the developer to get helpful information about what failed. This is similar to `strerror`. The messages will just be information that the developer can use, and possibly report back to us. No need to agree with Emo about the strings. ", "markup": "markdown", "html": "<p>It is for the developer to get helpful information about what failed. This is similar to <code>strerror</code>. The messages will just be information that the developer can use, and possibly report back to us. No need to agree with Emo about the strings. </p>", "type": "rendered"}, "created_on": "2015-02-09T22:22:47.703441+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-09T22:22:47.713600+00:00", "type": "pullrequest_comment", "id": 5047216}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5047802.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5047802"}}, "parent": {"id": 5042159, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5042159.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5042159"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I am used to seeing `xxx_status` (i.e. `hx_status`) as opposed to `xxx_lastresult`.  ...this returns a status right?", "markup": "markdown", "html": "<p>I am used to seeing <code>xxx_status</code> (i.e. <code>hx_status</code>) as opposed to <code>xxx_lastresult</code>.  ...this returns a status right?</p>", "type": "rendered"}, "created_on": "2015-02-09T22:57:18.478767+00:00", "user": {"display_name": "John Hsu", "uuid": "{0a186eae-abf0-4514-a951-23db5eccc286}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D"}, "html": {"href": "https://bitbucket.org/%7B0a186eae-abf0-4514-a951-23db5eccc286%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:f3968cd3-4910-4384-8349-482a6c7889ec/5445ce6e-6273-47f0-84eb-621c86ca11cb/128"}}, "nickname": "hsu", "type": "user", "account_id": "557058:f3968cd3-4910-4384-8349-482a6c7889ec"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-09T22:57:18.491359+00:00", "type": "pullrequest_comment", "id": 5047802}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048606.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048606"}}, "parent": {"id": 5047802, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5047802.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5047802"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "It doesn't matter to me. Unless someone feels really strongly, I'll leave it at `hx_last_result`.", "markup": "markdown", "html": "<p>It doesn't matter to me. Unless someone feels really strongly, I'll leave it at <code>hx_last_result</code>.</p>", "type": "rendered"}, "created_on": "2015-02-09T23:56:55.719213+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "inline": {"to": null, "from": null, "path": "haptix.h"}, "updated_on": "2015-02-09T23:56:55.730418+00:00", "type": "pullrequest_comment", "id": 5048606}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048302.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048302"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Sorry to join today's party late... and I actually have to run to a class I am teaching. I will be back online later this evening.  A few brief comments:\n\n-- now that you are focusing on style and convention, I leave it in your capable hands and will adopt what you decide\n\n-- fine with me to put IMU orientation back.  what is your quaternion format?  mine is (w,x,y,z).  even if we are not providing data, we should at least send back a unit quaternion (1,0,0,0) instead of all zeros, because the latter is not a valid orientation quaternion\n\n-- based on the info we got from the MPL team today, ref_vel is not actuall ref_vel but rather ref_vel_max, i.e. the motor is computing its ref_vel internally from the positions, and using the user-supplied value to impose an upper bound.", "markup": "markdown", "html": "<p>Sorry to join today's party late... and I actually have to run to a class I am teaching. I will be back online later this evening.  A few brief comments:</p>\n<p>-- now that you are focusing on style and convention, I leave it in your capable hands and will adopt what you decide</p>\n<p>-- fine with me to put IMU orientation back.  what is your quaternion format?  mine is (w,x,y,z).  even if we are not providing data, we should at least send back a unit quaternion (1,0,0,0) instead of all zeros, because the latter is not a valid orientation quaternion</p>\n<p>-- based on the info we got from the MPL team today, ref_vel is not actuall ref_vel but rather ref_vel_max, i.e. the motor is computing its ref_vel internally from the positions, and using the user-supplied value to impose an upper bound.</p>", "type": "rendered"}, "created_on": "2015-02-09T23:31:53.573160+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-09T23:34:28.638125+00:00", "type": "pullrequest_comment", "id": 5048302}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048356.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048356"}}, "parent": {"id": 5048302, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048302.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048302"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Gazebo quaternions also (w, x, y, z) ~~so let's make a note of that in the comments.~~ done", "markup": "markdown", "html": "<p>Gazebo quaternions also (w, x, y, z) <del>so let's make a note of that in the comments.</del> done</p>", "type": "rendered"}, "created_on": "2015-02-09T23:37:10.300113+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-02-09T23:39:40.164927+00:00", "type": "pullrequest_comment", "id": 5048356}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048591.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048591"}}, "parent": {"id": 5048302, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048302.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048302"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Changed `ref_vel` to `ref_vel_max`.", "markup": "markdown", "html": "<p>Changed <code>ref_vel</code> to <code>ref_vel_max</code>.</p>", "type": "rendered"}, "created_on": "2015-02-09T23:55:41.294781+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-09T23:55:41.303093+00:00", "type": "pullrequest_comment", "id": 5048591}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048696.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048696"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "I have become lost in the comments, and suggestions. Given that we should wrap this up soon, let me suggest the following:\n\n1. Please review the API, and see if all of your changes/suggestions are in place.\n1. Only respond to this comment.\n1. Only respond if you are **very** adamant about a change.", "markup": "markdown", "html": "<p>I have become lost in the comments, and suggestions. Given that we should wrap this up soon, let me suggest the following:</p>\n<ol>\n<li>Please review the API, and see if all of your changes/suggestions are in place.</li>\n<li>Only respond to this comment.</li>\n<li>Only respond if you are <strong>very</strong> adamant about a change.</li>\n</ol>", "type": "rendered"}, "created_on": "2015-02-10T00:05:58.390700+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-10T00:05:58.402789+00:00", "type": "pullrequest_comment", "id": 5048696}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5065745.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5065745"}}, "parent": {"id": 5048696, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048696.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048696"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "No comments so far. I'll merge this branch 12pm PDT, unless someone speaks up.", "markup": "markdown", "html": "<p>No comments so far. I'll merge this branch 12pm PDT, unless someone speaks up.</p>", "type": "rendered"}, "created_on": "2015-02-10T16:48:01.645372+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-10T16:48:01.665622+00:00", "type": "pullrequest_comment", "id": 5065745}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5066110.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5066110"}}, "parent": {"id": 5065745, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5065745.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5065745"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Didn't you say that ref_vel was changed to ref_vel_max?  It is not reflected in this version.  Otherwise everything looks good.", "markup": "markdown", "html": "<p>Didn't you say that ref_vel was changed to ref_vel_max?  It is not reflected in this version.  Otherwise everything looks good.</p>", "type": "rendered"}, "created_on": "2015-02-10T16:59:25.660701+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-10T16:59:25.691371+00:00", "type": "pullrequest_comment", "id": 5066110}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5066251.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5066251"}}, "parent": {"id": 5066110, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5066110.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5066110"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Forgot to push. It's in now.", "markup": "markdown", "html": "<p>Forgot to push. It's in now.</p>", "type": "rendered"}, "created_on": "2015-02-10T17:03:46.045499+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-10T17:03:46.071441+00:00", "type": "pullrequest_comment", "id": 5066251}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5069651.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5069651"}}, "parent": {"id": 5048696, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5048696.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5048696"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "Do we need a license for the header file?", "markup": "markdown", "html": "<p>Do we need a license for the header file?</p>", "type": "rendered"}, "created_on": "2015-02-10T19:38:53.463033+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2015-02-10T19:38:53.474367+00:00", "type": "pullrequest_comment", "id": 5069651}, {"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5069674.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5069674"}}, "parent": {"id": 5069651, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2/comments/5069651.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2/_/diff#comment-5069651"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 2, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/2.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/2"}}, "title": "Update C API"}, "content": {"raw": "We put one in `haptix-comm`. The API here is for collaboration purposes. We won't actually release this version.", "markup": "markdown", "html": "<p>We put one in <code>haptix-comm</code>. The API here is for collaboration purposes. We won't actually release this version.</p>", "type": "rendered"}, "created_on": "2015-02-10T19:40:34.784924+00:00", "user": {"display_name": "Nate Koenig", "uuid": "{c862cdd9-fcc8-4419-9fc7-e20db14b8fcb}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D"}, "html": {"href": "https://bitbucket.org/%7Bc862cdd9-fcc8-4419-9fc7-e20db14b8fcb%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:095b1e12-74ed-4e20-b44f-2f0745b616e0/ca24bb11-4787-4b14-a20d-d91835e9bde2/128"}}, "nickname": "Nathan Koenig", "type": "user", "account_id": "557058:095b1e12-74ed-4e20-b44f-2f0745b616e0"}, "updated_on": "2015-02-10T19:40:34.793232+00:00", "type": "pullrequest_comment", "id": 5069674}], "page": 1, "size": 85}