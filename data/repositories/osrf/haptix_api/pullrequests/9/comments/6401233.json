{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/9/comments/6401233.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/haptix_api/diff/osrf/haptix_api:None..None?path=haptix_sim.h"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/9/_/diff#comment-6401233"}}, "parent": {"id": 6395883, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/9/comments/6395883.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/9/_/diff#comment-6395883"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 9, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/9.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/9"}}, "title": "New Sim API"}, "content": {"raw": "I have mixed feelings about introducing a `hxWrench` struct. I agree that we should provide complete force and torque information at the joint, but it creates another nested layer of indexing. For example:\n\n```\nhxSimInfo simInfo;\nhxs_siminfo(simInfo);\nhxVector3 force = simInfo.models[i].joints[i].wrench_reactive.force;\n```\n\nvs.\n\n```\nhxSimInfo simInfo;\nhxs_siminfo(simInfo);\nhxVector3 force = simInfo.models[i].joints[i].force_reactive;\n```\n\nIt's a minor point though. If we provide an `hxs_wrench` function it would certainly be useful to have an `hxWrench` structure. I also don't know whether or not the users of the API are used to thinking of a force/torque pair as a wrench.", "markup": "markdown", "html": "<p>I have mixed feelings about introducing a <code>hxWrench</code> struct. I agree that we should provide complete force and torque information at the joint, but it creates another nested layer of indexing. For example:</p>\n<div class=\"codehilite\"><pre><span></span>hxSimInfo simInfo;\nhxs_siminfo(simInfo);\nhxVector3 force = simInfo.models[i].joints[i].wrench_reactive.force;\n</pre></div>\n\n\n<p>vs.</p>\n<div class=\"codehilite\"><pre><span></span>hxSimInfo simInfo;\nhxs_siminfo(simInfo);\nhxVector3 force = simInfo.models[i].joints[i].force_reactive;\n</pre></div>\n\n\n<p>It's a minor point though. If we provide an <code>hxs_wrench</code> function it would certainly be useful to have an <code>hxWrench</code> structure. I also don't know whether or not the users of the API are used to thinking of a force/torque pair as a wrench.</p>", "type": "rendered"}, "created_on": "2015-04-21T22:49:53.652984+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "inline": {"to": null, "from": null, "outdated": false, "path": "haptix_sim.h"}, "updated_on": "2015-04-21T22:49:53.658499+00:00", "type": "pullrequest_comment", "id": 6401233}