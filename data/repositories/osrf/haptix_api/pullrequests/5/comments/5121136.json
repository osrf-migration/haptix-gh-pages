{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/5/comments/5121136.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/5/_/diff#comment-5121136"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/5.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/5"}}, "title": "Define MATLAB API"}, "content": {"raw": "Continuing a discussion Brian and I were just having with DARPA over email...\n\nMATLAB is an interpreted language and works really hard to simplify the life of the user with regard to data types.  As a result, MATLAB users are not used to being required to specify data type explicitly (although they can).  We have a few input arguments to our functions that would normally be int or bool: port, xxx_enabled.  So I propose allowing the user to send int or double for 'port' , and bool or double for 'xxx_enabled'.  When using double for 'xxx_enabled', we can specify that x>0 means enabled and everything else means disabled. In case you are worried about equality comparisons with doubles, don't be.  As long as the values were entered directly (as opposed to arising from some computation) they are always exact, i.e. if I type x = 0 in MATLAB, send it to some function, and this function does 'if (x==0)' in either C or MATLAB, the result is true.", "markup": "markdown", "html": "<p>Continuing a discussion Brian and I were just having with DARPA over email...</p>\n<p>MATLAB is an interpreted language and works really hard to simplify the life of the user with regard to data types.  As a result, MATLAB users are not used to being required to specify data type explicitly (although they can).  We have a few input arguments to our functions that would normally be int or bool: port, xxx_enabled.  So I propose allowing the user to send int or double for 'port' , and bool or double for 'xxx_enabled'.  When using double for 'xxx_enabled', we can specify that x&gt;0 means enabled and everything else means disabled. In case you are worried about equality comparisons with doubles, don't be.  As long as the values were entered directly (as opposed to arising from some computation) they are always exact, i.e. if I type x = 0 in MATLAB, send it to some function, and this function does 'if (x==0)' in either C or MATLAB, the result is true.</p>", "type": "rendered"}, "created_on": "2015-02-12T20:31:00.758032+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-12T21:55:21.980591+00:00", "type": "pullrequest_comment", "id": 5121136}