{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/5/comments/5022151.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/5/_/diff#comment-5022151"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/5.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/5"}}, "title": "Define MATLAB API"}, "content": {"raw": "I am curious how you implement the multiple mex files. In my case, there is a single mex (called mjhx) that opens a socket and keeps it alive, and all other function calls route to it.  So for example:\n\nsensor = hx_update(target, command)\n\nis implemented internally as:\n\nsensor = mjhx('update', command)\n\nIt sounds like you have multiple mex files... how do you share a socket connection among them and keep it alive between calls?", "markup": "markdown", "html": "<p>I am curious how you implement the multiple mex files. In my case, there is a single mex (called mjhx) that opens a socket and keeps it alive, and all other function calls route to it.  So for example:</p>\n<p>sensor = hx_update(target, command)</p>\n<p>is implemented internally as:</p>\n<p>sensor = mjhx('update', command)</p>\n<p>It sounds like you have multiple mex files... how do you share a socket connection among them and keep it alive between calls?</p>", "type": "rendered"}, "created_on": "2015-02-07T03:46:56.282607+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-07T03:46:56.291003+00:00", "type": "pullrequest_comment", "id": 5022151}