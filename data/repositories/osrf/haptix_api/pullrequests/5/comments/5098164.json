{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/5/comments/5098164.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/5/_/diff#comment-5098164"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 5, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/5.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/5"}}, "title": "Define MATLAB API"}, "content": {"raw": "Oh great, we are still in standardization mode... I somehow assumed after agreeing on error handling the rest is obvious, and already implemented both the new C and MATLAB APIs... I can change the MATLAB though if there is a reason, it is a minimal amount of work. Have to run as usual (teaching is such a downside to being a professor!)  but below are the functions in my MATLAB implementation.  Do you see a reason to change any of them?\n\n\n```\n#!matlab\n\nfunction info = hx_robot_info\n%hx_robot_info\n%   return info about the robot: sizes and limits\n\ninfo = hx('robot_info');\nend\n\n\nfunction sensor = hx_read_sensors\n%hx_read_sensors\n%   return the sensor data, after a 1000/update_rate ms delay\n\nsensor = hx('read_sensors');\nend\n\n\nfunction hx_connect(host, port)\n%hx_connect(host, port)\n%   connect to specified host (empty: local host)\n%   the port is ignored (it is hardwired)\n\nhx('connect', host);\nend\n\n\nfunction hx_close\n%hx_close\n%   close connection to simulator\n\nhx('close');\nend\n\n\nfunction sensor = hx_update(command)\n%sensor = hx_update(command)\n%   send command, return sensor data\n%   the simulator imposes a 1000/update_rate ms delay\n%\n%   command must have vector fields with size equal to motor_count:\n%      ref_pos\n%      ref_vel_max\n%      gain_pos\n%      gain_vel\n%   and scalar fields specifying (as 1 or 0) which vectors to update:\n%      ref_pos_enabled\n%      ref_vel_max_enabled\n%      gain_pos_enabled\n%      gain_vel_enabled\n\nsensor = hx('update', command);\nend\n\n```\n", "markup": "markdown", "html": "<p>Oh great, we are still in standardization mode... I somehow assumed after agreeing on error handling the rest is obvious, and already implemented both the new C and MATLAB APIs... I can change the MATLAB though if there is a reason, it is a minimal amount of work. Have to run as usual (teaching is such a downside to being a professor!)  but below are the functions in my MATLAB implementation.  Do you see a reason to change any of them?</p>\n<div class=\"codehilite language-matlab\"><pre><span></span><span class=\"k\">function</span> <span class=\"nf\">info</span> <span class=\"p\">=</span> <span class=\"n\">hx_robot_info</span>\n<span class=\"c\">%hx_robot_info</span>\n<span class=\"c\">%   return info about the robot: sizes and limits</span>\n\n<span class=\"n\">info</span> <span class=\"p\">=</span> <span class=\"n\">hx</span><span class=\"p\">(</span><span class=\"s\">&#39;robot_info&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">end</span>\n\n\n<span class=\"k\">function</span> <span class=\"nf\">sensor</span> <span class=\"p\">=</span> <span class=\"n\">hx_read_sensors</span>\n<span class=\"c\">%hx_read_sensors</span>\n<span class=\"c\">%   return the sensor data, after a 1000/update_rate ms delay</span>\n\n<span class=\"n\">sensor</span> <span class=\"p\">=</span> <span class=\"n\">hx</span><span class=\"p\">(</span><span class=\"s\">&#39;read_sensors&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">end</span>\n\n\n<span class=\"k\">function</span><span class=\"w\"> </span><span class=\"nf\">hx_connect</span><span class=\"p\">(</span>host, port<span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"c\">%hx_connect(host, port)</span>\n<span class=\"c\">%   connect to specified host (empty: local host)</span>\n<span class=\"c\">%   the port is ignored (it is hardwired)</span>\n\n<span class=\"n\">hx</span><span class=\"p\">(</span><span class=\"s\">&#39;connect&#39;</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"p\">);</span>\n<span class=\"k\">end</span>\n\n\n<span class=\"k\">function</span> <span class=\"nf\">hx_close</span>\n<span class=\"c\">%hx_close</span>\n<span class=\"c\">%   close connection to simulator</span>\n\n<span class=\"n\">hx</span><span class=\"p\">(</span><span class=\"s\">&#39;close&#39;</span><span class=\"p\">);</span>\n<span class=\"k\">end</span>\n\n\n<span class=\"k\">function</span><span class=\"w\"> </span>sensor <span class=\"p\">=</span><span class=\"w\"> </span><span class=\"nf\">hx_update</span><span class=\"p\">(</span>command<span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"c\">%sensor = hx_update(command)</span>\n<span class=\"c\">%   send command, return sensor data</span>\n<span class=\"c\">%   the simulator imposes a 1000/update_rate ms delay</span>\n<span class=\"c\">%</span>\n<span class=\"c\">%   command must have vector fields with size equal to motor_count:</span>\n<span class=\"c\">%      ref_pos</span>\n<span class=\"c\">%      ref_vel_max</span>\n<span class=\"c\">%      gain_pos</span>\n<span class=\"c\">%      gain_vel</span>\n<span class=\"c\">%   and scalar fields specifying (as 1 or 0) which vectors to update:</span>\n<span class=\"c\">%      ref_pos_enabled</span>\n<span class=\"c\">%      ref_vel_max_enabled</span>\n<span class=\"c\">%      gain_pos_enabled</span>\n<span class=\"c\">%      gain_vel_enabled</span>\n\n<span class=\"n\">sensor</span> <span class=\"p\">=</span> <span class=\"n\">hx</span><span class=\"p\">(</span><span class=\"s\">&#39;update&#39;</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"p\">);</span>\n<span class=\"k\">end</span>\n</pre></div>", "type": "rendered"}, "created_on": "2015-02-11T22:53:01.313104+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-02-11T22:59:34.790854+00:00", "type": "pullrequest_comment", "id": 5098164}