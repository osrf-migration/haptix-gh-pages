{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/5971181.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-5971181"}}, "parent": {"id": 5918091, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/5918091.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-5918091"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4"}}, "title": "Update to the simulation API"}, "content": {"raw": "\"Setting the state is a good idea in principle, but impossible to make standard, because different simulators have different state representation. In ODE or Bullet, the state is the position and velocity of each body. In MuJoCo or DART, the state is the position and velocity of each joint, and the body positions and velocities are obtained via forward kinematics. So these should be simulator-specific extensions. For Gazebo you may need two sets of such extensions actually, since you are supporting both types of physics engines.\"\n\nI'm not sure I see your point. It should be possible to at least make the API standard, because even though the different physics engines have different state representations, the simulator can compute the missing information to deliver to the user (you said yourself that body positions can be obtained via forward kinematics). If you're referring to the fact that the state in each simulator won't be identical, that's an unavoidable difference, and I don't think it's not a stated goal of this API.", "markup": "markdown", "html": "<p>\"Setting the state is a good idea in principle, but impossible to make standard, because different simulators have different state representation. In ODE or Bullet, the state is the position and velocity of each body. In MuJoCo or DART, the state is the position and velocity of each joint, and the body positions and velocities are obtained via forward kinematics. So these should be simulator-specific extensions. For Gazebo you may need two sets of such extensions actually, since you are supporting both types of physics engines.\"</p>\n<p>I'm not sure I see your point. It should be possible to at least make the API standard, because even though the different physics engines have different state representations, the simulator can compute the missing information to deliver to the user (you said yourself that body positions can be obtained via forward kinematics). If you're referring to the fact that the state in each simulator won't be identical, that's an unavoidable difference, and I don't think it's not a stated goal of this API.</p>", "type": "rendered"}, "created_on": "2015-03-30T23:03:39.913843+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-03-30T23:03:39.921589+00:00", "type": "pullrequest_comment", "id": 5971181}