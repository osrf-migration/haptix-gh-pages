{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/6146122.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-6146122"}}, "parent": {"id": 6106692, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/6106692.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-6106692"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4"}}, "title": "Update to the simulation API"}, "content": {"raw": "Gazebo link = MuJoCo body\n\nGazebo collision/visual = MuJoCo geom\n\nGazebo model does not have an analog in MuJoCo; it seems to be a grouping element that does not affect the physics.\n\nIn MuJoCo the bodies are arranged in a hierarchy making the parent-child relations explicit.  There is always a \"world\" body and all other bodies are its descendants.  Static geoms are attached to this world body, and need to be identified when collisions occur.  It is possible to create a dummy body without any DOFs for each static geom, but MuJoCo is designed to make dummy bodies unnecessary (in particular by allowing the user to create custom joint types between bodies).", "markup": "markdown", "html": "<p>Gazebo link = MuJoCo body</p>\n<p>Gazebo collision/visual = MuJoCo geom</p>\n<p>Gazebo model does not have an analog in MuJoCo; it seems to be a grouping element that does not affect the physics.</p>\n<p>In MuJoCo the bodies are arranged in a hierarchy making the parent-child relations explicit.  There is always a \"world\" body and all other bodies are its descendants.  Static geoms are attached to this world body, and need to be identified when collisions occur.  It is possible to create a dummy body without any DOFs for each static geom, but MuJoCo is designed to make dummy bodies unnecessary (in particular by allowing the user to create custom joint types between bodies).</p>", "type": "rendered"}, "created_on": "2015-04-09T04:42:23.700341+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-04-09T04:42:31.126159+00:00", "type": "pullrequest_comment", "id": 6146122}