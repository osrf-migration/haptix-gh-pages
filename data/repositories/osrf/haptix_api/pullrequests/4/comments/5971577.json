{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/5971577.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-5971577"}}, "parent": {"id": 5918091, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/5918091.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-5918091"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4"}}, "title": "Update to the simulation API"}, "content": {"raw": "```\nstruct _hxModel;\nstruct _hxSimInfo;\nhxResult hxs_siminfo(hxSimInfo *_siminfo);\n```\n\n\"These are too simulator-specific to be standardized; MuJoCo and Gazebo support different sets of model elements. And we don't know what elements the users will want to have access to. I suggest leaving it out of the standard and defining simulator-specific extensions that provide such functionality as needed.\"\n\nYes, Gazebo and Mujoco have different model elements, but I think it's useful to expose the Model abstraction to the user in a unified API, and that we can provide basic useful information to the users that is universal to both physics simulators. Looking at what we've proposed in this document:\n\n```\nstruct _hxModel\n{\n  char *name;\n\n  hxTransform transform;\n\n  int is_static;\n\n  int id;\n\n  int link_count;\n\n  hxLink links[hxMAXLINKS];\n\n  int joint_count;\n\n  hxJoint joints[hxMAXJOINTS];\n};\n```\n\nThe only attribute here that might not be shared between simulations is `is_static`, and perhaps the unique model `id`--I don't know what naming conventions MuJoCo uses. Additionally, `hx_sim_info` is just a collection of pointers to all the models in simulation, the number of models, and the current user camera.", "markup": "markdown", "html": "<div class=\"codehilite\"><pre><span></span>struct _hxModel;\nstruct _hxSimInfo;\nhxResult hxs_siminfo(hxSimInfo *_siminfo);\n</pre></div>\n\n\n<p>\"These are too simulator-specific to be standardized; MuJoCo and Gazebo support different sets of model elements. And we don't know what elements the users will want to have access to. I suggest leaving it out of the standard and defining simulator-specific extensions that provide such functionality as needed.\"</p>\n<p>Yes, Gazebo and Mujoco have different model elements, but I think it's useful to expose the Model abstraction to the user in a unified API, and that we can provide basic useful information to the users that is universal to both physics simulators. Looking at what we've proposed in this document:</p>\n<div class=\"codehilite\"><pre><span></span>struct _hxModel\n{\n  char *name;\n\n  hxTransform transform;\n\n  int is_static;\n\n  int id;\n\n  int link_count;\n\n  hxLink links[hxMAXLINKS];\n\n  int joint_count;\n\n  hxJoint joints[hxMAXJOINTS];\n};\n</pre></div>\n\n\n<p>The only attribute here that might not be shared between simulations is <code>is_static</code>, and perhaps the unique model <code>id</code>--I don't know what naming conventions MuJoCo uses. Additionally, <code>hx_sim_info</code> is just a collection of pointers to all the models in simulation, the number of models, and the current user camera.</p>", "type": "rendered"}, "created_on": "2015-03-30T23:28:55.238891+00:00", "user": {"display_name": "Jackie K", "uuid": "{e3d60b62-b7c7-4863-b9b9-cdae9f123cec}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D"}, "html": {"href": "https://bitbucket.org/%7Be3d60b62-b7c7-4863-b9b9-cdae9f123cec%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/ea011fa2919d4bd4568b32b440eda779d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsJK-0.png"}}, "nickname": "jacquelinekay", "type": "user", "account_id": "557058:f56c822f-f75c-4665-80f9-6e7764893b9c"}, "updated_on": "2015-03-30T23:31:22.557879+00:00", "type": "pullrequest_comment", "id": 5971577}