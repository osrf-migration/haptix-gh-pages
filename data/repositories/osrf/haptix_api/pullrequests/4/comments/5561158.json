{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/5561158.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-5561158"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4"}}, "title": "Update to the simulation API"}, "content": {"raw": "Here are my suggestions (you can see the changes [in this branch](#!/osrf/haptix_api/branches/compare/haptix_sim_api_update_caguero..haptix_sim_api_update#diff)):\n\n* Add a `name` field to each joint and link. This can be useful if you want to get an hxLink or hxJoint pointer to a particular link/model. Without the `name` I'm not sure how to do it.\n* Add a `name` field to each model. If you use `hxs_siminfo()` you'll get the list of all models. A `name` can be useful to identify models that we didn't create with `hxs_add_model()` and we don't know their IDs.\n* Use static memory for links, joints and models. We used static memory in haptix.h so it would be better for consistency, improve the performance and avoid to deallocate and allocate memory in a lot of places.\n* Rename `hxContact` to `hxContactPoint` and create a new `hxContacts` to represent a collection of contact points.\n* Create `hxJacobian` struct to facilitate the use of the Jacobian matrix after calling to `hxs_jacobian()`.\n* Use a const pointer for all the structs passed in as input pararameters. This would be consistent with the `hx_update()` function.\n* Add a `name` parameter to the function `hxs_add_model()`, return a pointer to hxModel as an output parameter and return an hxResult.\n* Change `hxs_is_logging()` to return an `hxResult` that tells you if the operation succeed and you can check the result value (that is an output parameter).\n* Remove `hxs_remove_model()`. We can use `hx_remove_movel_id()`.\n", "markup": "markdown", "html": "<p>Here are my suggestions (you can see the changes <a data-is-external-link=\"true\" href=\"#!/osrf/haptix_api/branches/compare/haptix_sim_api_update_caguero..haptix_sim_api_update#diff\" rel=\"nofollow\">in this branch</a>):</p>\n<ul>\n<li>Add a <code>name</code> field to each joint and link. This can be useful if you want to get an hxLink or hxJoint pointer to a particular link/model. Without the <code>name</code> I'm not sure how to do it.</li>\n<li>Add a <code>name</code> field to each model. If you use <code>hxs_siminfo()</code> you'll get the list of all models. A <code>name</code> can be useful to identify models that we didn't create with <code>hxs_add_model()</code> and we don't know their IDs.</li>\n<li>Use static memory for links, joints and models. We used static memory in haptix.h so it would be better for consistency, improve the performance and avoid to deallocate and allocate memory in a lot of places.</li>\n<li>Rename <code>hxContact</code> to <code>hxContactPoint</code> and create a new <code>hxContacts</code> to represent a collection of contact points.</li>\n<li>Create <code>hxJacobian</code> struct to facilitate the use of the Jacobian matrix after calling to <code>hxs_jacobian()</code>.</li>\n<li>Use a const pointer for all the structs passed in as input pararameters. This would be consistent with the <code>hx_update()</code> function.</li>\n<li>Add a <code>name</code> parameter to the function <code>hxs_add_model()</code>, return a pointer to hxModel as an output parameter and return an hxResult.</li>\n<li>Change <code>hxs_is_logging()</code> to return an <code>hxResult</code> that tells you if the operation succeed and you can check the result value (that is an output parameter).</li>\n<li>Remove <code>hxs_remove_model()</code>. We can use <code>hx_remove_movel_id()</code>.</li>\n</ul>", "type": "rendered"}, "created_on": "2015-03-10T02:02:16.269046+00:00", "user": {"display_name": "Carlos Ag\u00fcero", "uuid": "{da8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D"}, "html": {"href": "https://bitbucket.org/%7Bda8a8e89-4bb0-421b-bd0e-dbbed3d4ed6a%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/692bf15758111acaddae4da15a47f9e5d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsCA-0.png"}}, "nickname": "caguero", "type": "user", "account_id": "557058:4ded1ddf-947e-4154-bbd1-3dba24f1bdbd"}, "updated_on": "2015-03-10T02:02:16.278582+00:00", "type": "pullrequest_comment", "id": 5561158}