{"links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/5974455.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-5974455"}}, "parent": {"id": 5971181, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4/comments/5971181.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4/_/diff#comment-5971181"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/osrf/haptix_api/pullrequests/4.json"}, "html": {"href": "#!/osrf/haptix_api/pull-requests/4"}}, "title": "Update to the simulation API"}, "content": {"raw": "True, body positions and velocities can be computed from joint positions and velocities via forward kinematics.  The opposite is not possible however, because the Cartesian representation is redundant and one can specify \"states\" that violate the joint constraints.  Do you have / are you willing to implement the necessary forward kinematics in Gazebo (not only for positions but also for velocities)?  If so, we can have a standard hx_setstate function that uses joint coordinates, and similarly for hx_getstate.", "markup": "markdown", "html": "<p>True, body positions and velocities can be computed from joint positions and velocities via forward kinematics.  The opposite is not possible however, because the Cartesian representation is redundant and one can specify \"states\" that violate the joint constraints.  Do you have / are you willing to implement the necessary forward kinematics in Gazebo (not only for positions but also for velocities)?  If so, we can have a standard hx_setstate function that uses joint coordinates, and similarly for hx_getstate.</p>", "type": "rendered"}, "created_on": "2015-03-31T03:55:04.375997+00:00", "user": {"display_name": "Emo Todorov", "uuid": "{c84af488-b11e-458d-9817-1aeafde381d2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D"}, "html": {"href": "https://bitbucket.org/%7Bc84af488-b11e-458d-9817-1aeafde381d2%7D/"}, "avatar": {"href": "https://bitbucket.org/account/emotodorov/avatar/"}}, "nickname": "emotodorov", "type": "user", "account_id": null}, "updated_on": "2015-03-31T03:55:04.391034+00:00", "type": "pullrequest_comment", "id": 5974455}